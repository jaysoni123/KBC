{"version":3,"sources":["kbc.png","good_luck.gif","header.js","footer_smily.js","footer.js","question_bank.js","validation.js","input_type_text.js","input_type_radio.js","input_type_range.js","input_type_select.js","input_type_checkbox.js","button.js","animation_styles.js","finish.js","questions.js","KBC.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","width","Component","Smily","goodluck","Footer","question_bank","type","question_id","Question","Options","option_id","option","Answer","option_title","options","Validation","warning","console","log","this","props","status","Text","currentAnswer","question_object","map","current_option","currentOptionId","key","name","value","id","onChange","textAnswer","Fragment","active_index","validationWarning","Radio","radioAnswer","checked","htmlFor","Range","state","range_value","currentOptionTitle","min","max","step","defaultValue","e","setState","target","rangeAnswer","onLoad","SelectBox","multiple_dropdown","current_option1","selectbox_options","selected","selectAnswer","Checkbox","Button","onClick","operation","button_usage","animationColors","backgroundColor","Finish","colors","timer","changeColors","setInterval","showMsg","letter","style","Math","floor","random","length","Questions","userAnswers","activeAnswer","currentQuestion","submited","activeQuestionAnswer","finished","showFinishMessage","previousQuestion","nextQuestion","Object","keys","splice","push","toString","answer","trim","selectedIndex","rangeValue","prevProps","prevState","Question_Type","finishButton","alert","nextButton","KBC","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a846914.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kbc.cd5df429.png\";","module.exports = __webpack_public_path__ + \"static/media/good_luck.bdbc7ea6.gif\";","import React, { Component } from 'react'\r\nimport logo from \"./kbc.png\"\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-center bg-primary\">\r\n                <div className=\"col-auto py-2\">\r\n                    <img src={logo} alt=\"logo\" width=\"100px\" />\r\n                </div>\r\n                <div className=\"col-auto py-3\">\r\n                    <h1 className=\"font-weight-bold title\">Kon Banega karodpati</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport goodluck from \"./good_luck.gif\"\r\n\r\nexport default class Smily extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"col-1\">\r\n                <img src={goodluck} alt=\"Best of luck\" width=\"80px\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Smily from \"./footer_smily\"\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row footer bg-secondary py-2\">\r\n                <Smily />\r\n                <Smily />\r\n                <Smily />\r\n                <Smily />    \r\n                <div className=\"col-4 text-center py-2\">\r\n                    <h1 className=\"text-danger\">Best of Luck</h1>\r\n                </div>\r\n                <Smily />\r\n                <Smily />\r\n                <Smily />\r\n                <Smily />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const question_bank = [\r\n    {   \r\n        type: \"radio\",\r\n        question_id: 1,\r\n        Question: \"The language spoken by the people by Pakistan is ?\",\r\n        Options: [\r\n            {\r\n                option_id: 1,\r\n                option: \"Hindi\"\r\n            },\r\n            {\r\n                option_id: 2,\r\n                option: \"Palauan\"\r\n            },\r\n            {\r\n                option_id: 3,\r\n                option: \"Sindhi\"\r\n            },\r\n            {\r\n                option_id: 4,\r\n                option: \"Nauruan\"\r\n            },\r\n        ],\r\n        Answer: \"Sindhi\"\r\n    },\r\n    {\r\n        type: \"text\",\r\n        question_id: 2,\r\n        Question: \"The World Largest desert is ?\",\r\n        Options: [\r\n            {\r\n                option_id: 1,\r\n                option: \"Thar\"\r\n            },\r\n            {\r\n                option_id: 2,\r\n                option: \"Kalahari\"\r\n            },\r\n            {\r\n                option_id: 3,\r\n                option: \"Sahara\"\r\n            },\r\n            {\r\n                option_id: 4,\r\n                option: \"Sonoran\"\r\n            }\r\n        ],\r\n        Answer: \"Sahara\"\r\n    },\r\n    {\r\n        type: \"range\",\r\n        question_id: 3,\r\n        Question: \"How much increment you are expecting in your salary this year ?\",\r\n        Options: [\r\n            {\r\n                option_title: \"Minor\",\r\n                option_id: 1,\r\n                option: 10\r\n            },\r\n            {\r\n                option_title: \"Little\",\r\n                option_id: 2,\r\n                option: 25\r\n            },\r\n            {\r\n                option_title: \"More\",\r\n                option_id: 3,\r\n                option: 70\r\n            },\r\n            {\r\n                option_title: \"Very High\",\r\n                option_id: 4,\r\n                option: 85\r\n            }            \r\n        ],\r\n        Answer: \"\"\r\n    },\r\n    {\r\n        type: \"radio\",\r\n        question_id: 4,\r\n        Question: \"The metal whose salts are sensitive to light is ?\",\r\n        Options: [\r\n            {\r\n                option_id: 1,\r\n                option: \"Zinc\"\r\n            },\r\n            {\r\n                option_id: 2,\r\n                option: \"Silver\"\r\n            },\r\n            {\r\n                option_id: 3,\r\n                option: \"Copper\"\r\n            },\r\n            {\r\n                option_id: 4,\r\n                option: \"Aluminium\"\r\n            }\r\n        ],\r\n        Answer: \"Silver\"\r\n    },\r\n    {\r\n        type: \"radio\",\r\n        question_id: 5,\r\n        Question: \"10 + 20 - 6 * 5 = ?\",\r\n        Options: [\r\n            {\r\n                option_id: 1,\r\n                option: \"0\"\r\n            },\r\n            {\r\n                option_id: 2,\r\n                option: \"25\"\r\n            },\r\n            {\r\n                option_id: 3,\r\n                option: \"18\"\r\n            },\r\n            {\r\n                option_id: 4,\r\n                option: \"20\"\r\n            }\r\n        ],\r\n        Answer: \"0\"\r\n    },\r\n    {\r\n        type: \"text\",\r\n        question_id: 6,\r\n        Question: \"The Central Rice Research Station is situated in ?\",\r\n        Options: [\r\n            {\r\n                option_id: 1,\r\n                option: \"Chennai\"\r\n            },\r\n            {\r\n                option_id: 2,\r\n                option: \"Cuttack\"\r\n            },\r\n            {\r\n                option_id: 3,\r\n                option: \"Bangalore\"\r\n            },\r\n            {\r\n                option_id: 4,\r\n                option: \"Quilon\"\r\n            }\r\n        ],\r\n        Answer: \"Cuttack\"\r\n    },\r\n    {\r\n        type: \"select\",\r\n        question_id: 7,\r\n        Question: \"What is your Zodic sign ?\",\r\n        Options: [{\r\n            option_id: 11,\r\n            option_title: \"zodic signs\",\r\n            options: [\r\n                {\r\n                    option_id: 1,\r\n                    option: \"Aquarius\"\r\n                },\r\n                {\r\n                    option_id: 2,\r\n                    option: \"Pisces\"\r\n                },\r\n                {\r\n                    option_id: 3,\r\n                    option: \"Aries\"\r\n                },\r\n                {\r\n                    option_id: 4,\r\n                    option: \"Taurus\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            option_id: 12,\r\n            option_title: \"Animals\",\r\n            options: [\r\n                {\r\n                    option_id: 5,\r\n                    option: \"cow\"\r\n                },\r\n                {\r\n                    option_id: 6,\r\n                    option: \"Buffellow\"\r\n                },\r\n                {\r\n                    option_id: 7,\r\n                    option: \"Lion\"\r\n                },\r\n                {\r\n                    option_id: 8,\r\n                    option: \"Monkey\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            option_id: 13,\r\n            option_title: \"Guns\",\r\n            options: [\r\n                {\r\n                    option_id: 5,\r\n                    option: \"Desert-eagle\"\r\n                },\r\n                {\r\n                    option_id: 6,\r\n                    option: \"Ak-47\"\r\n                },\r\n                {\r\n                    option_id: 7,\r\n                    option: \"Barrett M82\"\r\n                },\r\n                {\r\n                    option_id: 8,\r\n                    option: \"smith & wesson\"\r\n                },\r\n                {\r\n                    option_id: 9,\r\n                    option: \"Glock-17\"\r\n                }\r\n            ]\r\n        }\r\n        ],\r\n        Answer: \"\"\r\n    },\r\n    {\r\n        type: \"radio\",\r\n        question_id: 8,\r\n        Question: \"What is the capital of India ?\",\r\n        Options: [\r\n            {\r\n                option_id: 1,\r\n                option: \"Bombay\"\r\n            },\r\n            {\r\n                option_id: 2,\r\n                option: \"Delhi\"\r\n            },\r\n            {\r\n                option_id: 3,\r\n                option: \"Ahmedabad\"\r\n            },\r\n            {\r\n                option_id: 4,\r\n                option: \"Kolkata\"\r\n            }\r\n        ],\r\n        Answer: \"Delhi\"\r\n    },\r\n    {\r\n        type: \"range\",\r\n        question_id: 9,\r\n        Question: \"How much you are interested in front-end ?\",\r\n        Options: [\r\n            {\r\n                option_title:\"less\",\r\n                option_id: 1,\r\n                option: 25\r\n            },\r\n            {\r\n                option_title:\"Medium\",\r\n                option_id: 2,\r\n                option: 50\r\n            },\r\n            {\r\n                option_title:\"More\",\r\n                option_id: 3,\r\n                option: 75\r\n            },\r\n            {\r\n                option_title:\"Passionate\",\r\n                option_id: 4,\r\n                option: 100\r\n            }            \r\n        ],\r\n        Answer: \"\"\r\n    },\r\n    {\r\n        type: \"checkbox\",\r\n        question_id: 10,\r\n        Question: \"Which one is your Favourite car ?\",\r\n        Options: [\r\n            {\r\n                option_id: 1,\r\n                option: \"Audi\"\r\n            },\r\n            {\r\n                option_id: 2,\r\n                option: \"Mercedes\"\r\n            },\r\n            {\r\n                option_id: 3,\r\n                option: \"Bugatti\"\r\n            },\r\n            {\r\n                option_id: 4,\r\n                option: \"scoda\"\r\n            },\r\n            {\r\n                option_id: 5,\r\n                option: \"farrari\"\r\n            },\r\n            {\r\n                option_id: 6,\r\n                option: \"lamborghini\"\r\n            },\r\n            {\r\n                option_id: 7,\r\n                option: \"rolls royce\"\r\n            },\r\n            {\r\n                option_id: 8,\r\n                option: \"Other\"\r\n            }\r\n            \r\n        ],\r\n        Answer: \"Audi\"\r\n    }\r\n];\r\n\r\nexport default question_bank;","import React, { Component } from 'react'\r\n\r\nexport default class Validation extends Component {\r\n    render() {\r\n        console.log(this.props.status);\r\n\r\n        let warning;\r\n\r\n        switch(this.props.type) {\r\n            case \"radio\":\r\n                warning = \"Please choose any option\";\r\n                break;\r\n\r\n            case \"select\":\r\n                warning = \"Please select Answer\";\r\n                break;\r\n\r\n            case \"text\":\r\n                warning = \"Please Enter Answer\";\r\n                break;\r\n\r\n            case \"range\":\r\n                warning = \"Please choose answer\";\r\n                break;\r\n\r\n            default:\r\n\r\n\r\n        }\r\n\r\n        if(this.props.status === \"valid\") {\r\n            return(\r\n                <div className=\"mt-4 d-none\">\r\n                    <h6 className=\"text-danger font-weight-bold\">{warning}</h6>\r\n                </div>\r\n            ) \r\n        } else {\r\n            return(\r\n                <div className=\"mt-4\">\r\n                    <h6 className=\"text-danger font-weight-bold\">{warning}</h6>\r\n                </div>\r\n            )   \r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Validation from \"./validation\"   // import Validation component for display validation status\r\n\r\nexport default class Text extends Component {\r\n    render() {\r\n        let currentAnswer = this.props.currentAnswer;\r\n\r\n        let options = this.props.question_object.Options.map((current_option) => {\r\n            // console.log(current_option.option_id);\r\n            let currentOptionId = current_option.option_id;\r\n            return(\r\n                <div className=\"col-12\" key={current_option.option_id}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <label className=\"font-weight-bold\">{current_option.option}</label>\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                            <input type=\"text\" name=\"kbc_option\" value={currentAnswer[currentOptionId]} id={currentOptionId}  className=\"form-control my-2\" onChange={this.props.textAnswer} />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            );\r\n        });\r\n\r\n        //console.log(\"text-options_objext\", this.props.question_object.Options);\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <h4 key={this.props.question_object.question_id}>\r\n                    <span className=\"mx-1\">Q.{this.props.active_index + 1}</span>\r\n                    {this.props.question_object.Question}\r\n                </h4>\r\n                <div className=\"row my-4\">\r\n                   {options} \r\n                </div>\r\n                <Validation status={this.props.validationWarning} type=\"text\" />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Validation from \"./validation\"   // import Validation component for display validation status\r\n\r\nexport default class Radio extends Component {\r\n    \r\n    render() {\r\n\r\n        let currentAnswer = this.props.currentAnswer;\r\n\r\n        let options = this.props.question_object.Options.map((current_option) => {\r\n\r\n                let currentOptionId = current_option.option_id;\r\n                return (\r\n                    <div className=\"col-6\" key={currentOptionId}>\r\n                        <input type=\"radio\" name=\"kbc_option\" id={currentOptionId} key={this.props.question_object.Options.option_id}\r\n                         value={this.props.question_object.Options.option} onChange={this.props.radioAnswer}\r\n                          checked={currentAnswer[currentOptionId]}  />\r\n                        <label htmlFor={currentOptionId}  className=\"font-weight-bold mx-1\">{current_option.option}</label>\r\n                    </div>\r\n                );\r\n            }); \r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h4 key={this.props.question_object.question_id}>\r\n                    <span className=\"mx-1\">Q.{this.props.active_index + 1}</span>\r\n                    {this.props.question_object.Question}\r\n                </h4>\r\n                <div className=\"row my-4\">\r\n                   {options}\r\n                </div>\r\n                <Validation status={this.props.validationWarning} type=\"radio\" />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Validation from \"./validation\"   // import Validation component for display validation status\r\n\r\nexport default class Range extends Component {\r\n\r\n    state = {\r\n        range_value: 0\r\n    }\r\n\r\n    render() {\r\n\r\n        let currentAnswer = this.props.currentAnswer;\r\n        \r\n        // if(this.state.range_value !== this.props.currentAnswer.option_id) {\r\n        //     this.setState({range_value: this.props.currentAnswer.option_id}); \r\n        // }\r\n\r\n        // console.log(\"current Answer : \", this.props.currentAnswer.option_id);\r\n\r\n        let options = this.props.question_object.Options.map((current_option) => {\r\n\r\n            let currentOptionId = current_option.option_id;\r\n            let currentOptionTitle = current_option.option_title;\r\n\r\n            if(currentAnswer[currentOptionId]) {\r\n                return (\r\n                    <div className=\"col-12\" key={currentOptionId}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-2\">\r\n                                <label className=\"font-weight-bold\">{currentOptionTitle}</label>\r\n                            </div>\r\n                            <div className=\"col-9\">\r\n                                <input type=\"range\" id={currentOptionId} min={1} max={100} step={1} value={currentAnswer[currentOptionId]} defaultValue={current_option.option} name=\"kbc_option\" onChange={\r\n                                    (e) => {\r\n                                        this.setState({range_value: e.target.value});\r\n                                        this.props.rangeAnswer(e);\r\n                                    }\r\n                                } className=\"form-control\" onLoad={this.props.rangeAnswer} />\r\n                            </div>\r\n                            <div className=\"col-1\">\r\n                                <label htmlFor={currentOptionId}>{currentAnswer[currentOptionId] + \"%\"}</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            \r\n            return (\r\n                <div className=\"col-12\" key={currentOptionId}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <label className=\"font-weight-bold\">{currentOptionTitle}</label>\r\n                        </div>\r\n                        <div className=\"col-9\">\r\n                            <input type=\"range\" id={currentOptionId} min={1} max={100} step={1} defaultValue={current_option.option} name=\"kbc_option\" onChange={\r\n                                (e) => {this.setState({range_value: e.target.value});\r\n                                    this.props.rangeAnswer(e);\r\n                                }\r\n                            } className=\"form-control\" />\r\n                        </div>\r\n                        <div className=\"col-1\">\r\n                            <label htmlFor={currentOptionId}>{current_option.option + \"%\"}</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h4 key={this.props.question_object.question_id}>\r\n                    <span className=\"mx-1\">Q.{this.props.active_index + 1}</span>\r\n                    {this.props.question_object.Question}\r\n                </h4>\r\n                <div className=\"row my-4\">\r\n                    {options}  \r\n                </div>\r\n                <Validation status={this.props.validationWarning} type=\"range\" />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Validation from \"./validation\"   // import Validation component for display validation status\r\n\r\nexport default class SelectBox extends Component {\r\n    render() {\r\n\r\n        let currentAnswer = this.props.currentAnswer;\r\n\r\n        // let selectbox_options = this.props.question_object.Options.map((current_option) => {\r\n        //     let currentOptionId = current_option.option_id;\r\n        //     return(\r\n        //         <option key={currentOptionId} id={currentOptionId} value={current_option.option} \r\n        //         >{current_option.option}</option>\r\n        //     );\r\n        // });\r\n\r\n        let multiple_dropdown = this.props.question_object.Options.map((current_option1) => {\r\n\r\n            console.log(\"current Option 1: \", current_option1);\r\n            let selectbox_options = current_option1.options.map((current_option) => {\r\n                let currentOptionId = current_option.option_id;\r\n                if(currentAnswer[currentOptionId]) {\r\n                    return(\r\n                        <option key={currentOptionId} id={currentOptionId} value={current_option.option} selected\r\n                        >{current_option.option}</option>\r\n                    );\r\n                }\r\n                return(\r\n                    <option key={currentOptionId} id={currentOptionId} value={current_option.option} \r\n                    >{current_option.option}</option>\r\n                );\r\n            });\r\n\r\n            return(\r\n                <div className=\"col-12 my-2\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <label className=\"font-weight-bold\">{current_option1.option_title}</label>\r\n                        </div>\r\n                        <div className=\"col-10\">\r\n                            <select className=\"form-control\" onChange={this.props.selectAnswer}>\r\n                                <option>Select</option>\r\n                                {selectbox_options}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h4 key={this.props.question_object.question_id}>\r\n                    <span className=\"mx-1\">Q.{this.props.active_index + 1}</span>\r\n                    {this.props.question_object.Question}\r\n                </h4>\r\n                \r\n                <div className=\"row my-4\">\r\n                    {multiple_dropdown}                \r\n                </div>\r\n                <Validation status={this.props.validationWarning} type=\"select\" />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Validation from \"./validation\"   // import Validation component for display validation status\r\n\r\nexport default class Checkbox extends Component {\r\n    \r\n    render() {\r\n\r\n        let currentAnswer = this.props.currentAnswer;\r\n\r\n        let options = this.props.question_object.Options.map((current_option) => {\r\n\r\n                let currentOptionId = current_option.option_id;\r\n                return (\r\n                    <div className=\"col-6\" key={currentOptionId}>\r\n                        <input type=\"checkbox\" name={current_option.option} id={currentOptionId} key={this.props.question_object.Options.option_id}\r\n                         value={current_option.option} onChange={this.props.radioAnswer}\r\n                          checked={currentAnswer[currentOptionId]}  />\r\n                        <label htmlFor={currentOptionId}  className=\"font-weight-bold mx-1\">{current_option.option}</label>\r\n                    </div>\r\n                );\r\n            }); \r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h4 key={this.props.question_object.question_id}>\r\n                    <span className=\"mx-1\">Q.{this.props.active_index + 1}</span>\r\n                    {this.props.question_object.Question}\r\n                </h4>\r\n                <div className=\"row my-4\">\r\n                   {options}\r\n                </div>\r\n                <Validation status={this.props.validationWarning} type=\"radio\" />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Button extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <button className=\"btn btn-success my-5\" onClick={this.props.operation}>{this.props.button_usage}</button>\r\n        )\r\n    }\r\n}\r\n","\r\n\r\nlet animationColors = [\r\n    {backgroundColor: \"#F0F8FF\"},\r\n    {backgroundColor: \"#FAEBD7\"},\r\n    {backgroundColor: \"#00FFFF\"},\r\n    {backgroundColor: \"#7FFFD4\"},\r\n    {backgroundColor: \"#FFEBCD\"},\r\n    {backgroundColor: \"#7FFF00\"},\r\n    {backgroundColor: \"#00FFFF\"},\r\n    {backgroundColor: \"#FF7F50\"},\r\n    {backgroundColor: \"#9932CC\"},\r\n    {backgroundColor: \"#FF8C00\"},\r\n    {backgroundColor: \"#9932CC\"},\r\n    {backgroundColor: \"#E9967A\"},\r\n    {backgroundColor: \"#9400D3\"},\r\n    {backgroundColor: \"#FF1493\"},\r\n    {backgroundColor: \"#696969\"},\r\n    {backgroundColor: \"#FFFAF0\"},\r\n    {backgroundColor: \"#FFD700\"},\r\n    {backgroundColor: \"#ADFF2F\"},\r\n    {backgroundColor: \"#F0FFF0\"},\r\n    {backgroundColor: \"#7CFC00\"},\r\n    {backgroundColor: \"#D3D3D3\"},\r\n    {backgroundColor: \"#87CEFA\"},\r\n    {backgroundColor: \"#F5DEB3\"},\r\n    {backgroundColor: \"#00FF7F\"},\r\n    {backgroundColor: \"#87CEEB\"},\r\n    {backgroundColor: \"#C0C0C0\"},\r\n    {backgroundColor: \"#FFC0CB\"},\r\n    {backgroundColor: \"#40E0D0\"},\r\n    {backgroundColor: \"#FF4500\"},\r\n    {backgroundColor: \"#C71585\"},\r\n    {backgroundColor: \"#FAF0E6\"},\r\n    {backgroundColor: \"#FFF0F5\"}\r\n];\r\n\r\nexport default animationColors;","import React, { Component } from 'react'\r\nimport animationColors from \"./animation_styles\"\r\n\r\nexport default class Finish extends Component {\r\n\r\n    state = {\r\n        colors: animationColors,\r\n        timer: 1\r\n    }\r\n\r\n    changeColors = () => {\r\n        if(this.state.colors[0] !== this.state.colors[0]) {\r\n            this.setState({colors: animationColors});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        setInterval(\r\n            this.changeColors(),1000\r\n        );\r\n\r\n        let msg = [\"H\", \"A\", \"V\", \"E\", \"\", \"A\", \"\", \"G\", \"O\", \"O\", \"D\", \"\", \"D\", \"A\", \"Y\"];\r\n        const showMsg = msg.map((letter) => {\r\n            return(\r\n                <div className=\"text-center\" style={this.state.colors[Math.floor(Math.random() * animationColors.length)]}>\r\n                    <span className=\"py-3 h4 px-4 font-weight-bold\">{letter}</span>\r\n                </div>\r\n            );\r\n        });\r\n\r\n\r\n        return (\r\n            <div className=\"row justify-content-center my-5\">\r\n                <div className=\"col-8\">\r\n                    <div className=\"h2 text-center text-success\">\r\n                        Participation Completed\r\n                        <span className=\"text-dark\">✔</span>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"row my-5\">\r\n                              {showMsg}\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport \"./kbc.css\"\r\nimport question_bank from \"./question_bank\"     // array of question's data\r\nimport Text from \"./input_type_text\"            // import Text component\r\nimport Radio from './input_type_radio'          // import Radio component\r\nimport Range from \"./input_type_range\"          // import Range component\r\nimport SelectBox from './input_type_select'     // import SelectBox component\r\nimport Checkbox from \"./input_type_checkbox\"    // import Checkbox component\r\nimport Button from \"./button\"                   // import Button component\r\nimport Finish from './finish'                   // import Finish component\r\n\r\nexport default class Questions extends Component {\r\n\r\n    userAnswers = [];               // stores all question's answer\r\n    activeAnswer = {};              // stores current active individual question's answer temporary          \r\n\r\n    state = {\r\n        currentQuestion: 0,         // current question object's index of question_bank array\r\n        submited: false,            // still not in use        \r\n        activeQuestionAnswer: {},   // stores current active individual question's answer in object temporary\r\n        validationWarning: \"valid\",\r\n        finished: false,\r\n        showFinishMessage: false\r\n    }\r\n\r\n    previousQuestion = () => { // for rander next question \r\n\r\n        this.setState({finished: false});\r\n\r\n        this.setState({validationWarning: \"valid\"});\r\n        // console.log(this.state.validationWarning);\r\n\r\n        if(this.state.currentQuestion > 0) {\r\n            this.setState({\r\n                currentQuestion: this.state.currentQuestion - 1          \r\n            });\r\n        }\r\n    }\r\n\r\n    nextQuestion = () => {  // for rander next question and also cleare activeAnswer & state.activeQuestionAnswer\r\n        \r\n        if(Object.keys(this.activeAnswer).length === 0) {   // validation for answer\r\n            if(!this.userAnswers[this.state.currentQuestion]) {\r\n                this.setState({validationWarning: \"invalid\"});\r\n                return false;\r\n            }\r\n        } \r\n\r\n        console.log(\"Current Question Index: \", this.state.currentQuestion);\r\n\r\n        if(this.userAnswers[this.state.currentQuestion]) {\r\n            if(this.state.currentQuestion > -1) {\r\n                this.userAnswers.splice(this.state.currentQuestion, 1);\r\n            }\r\n            this.userAnswers.splice(this.state.currentQuestion, 0, this.state.activeQuestionAnswer);\r\n        } else {\r\n            this.userAnswers.push(this.state.activeQuestionAnswer);\r\n        } \r\n\r\n        this.activeAnswer = {};\r\n        // this.userAnswers.push(this.state.activeQuestionAnswer);\r\n        this.setState({activeQuestionAnswer: {}});\r\n        console.log(this.userAnswers);\r\n\r\n        if(this.state.currentQuestion === (question_bank.length - 2)) {\r\n            this.setState({finished: true});\r\n        }\r\n\r\n        if(this.state.currentQuestion < (question_bank.length - 1) ) {\r\n            this.setState({currentQuestion: this.state.currentQuestion + 1});\r\n        }\r\n    }\r\n\r\n    textAnswer = (e) => {   // for store answer of input type text\r\n\r\n        // console.log(\"hello World\");\r\n\r\n        this.setState({validationWarning: \"valid\"});\r\n\r\n        let id= e.target.id.toString();\r\n        let answer = e.target.value;\r\n\r\n        if(answer.trim() !== \"\") {\r\n            this.activeAnswer[\"q_id\"] = question_bank[this.state.currentQuestion].question_id;\r\n            this.activeAnswer[id] = answer.trim();\r\n\r\n            this.setState({activeQuestionAnswer: this.activeAnswer});\r\n        }\r\n    }\r\n\r\n    selectAnswer = (e) => {  // for store answer of input type select\r\n\r\n        this.setState({validationWarning: \"valid\"});\r\n\r\n        // this.activeAnswer = {};\r\n        this.setState({activeQuestionAnswer: {}});\r\n\r\n        let option_id = e.target.options[e.target.selectedIndex].id.toString();\r\n        // let answer = e.target.options[e.target.selectedIndex].value;\r\n        // debugger;\r\n        this.activeAnswer[\"q_id\"] = question_bank[this.state.currentQuestion].question_id;\r\n        this.activeAnswer[option_id] = true;\r\n\r\n        console.log(this.activeAnswer);\r\n\r\n        this.setState({activeQuestionAnswer: this.activeAnswer});\r\n    }\r\n\r\n    radioAnswer = (e) => {  // for store answer of input type radio\r\n\r\n        this.setState({validationWarning: \"valid\"});\r\n\r\n        this.activeAnswer = {};\r\n        this.setState({activeQuestionAnswer: {}});\r\n\r\n        let option_id = e.target.id.toString();\r\n\r\n        this.activeAnswer[\"q_id\"] = question_bank[this.state.currentQuestion].question_id;\r\n        this.activeAnswer[option_id] = true;\r\n\r\n        this.setState({activeQuestionAnswer: this.activeAnswer});\r\n    }\r\n\r\n    rangeAnswer = (e) => {\r\n        //debugger;\r\n        // console.log(\"Hello World : \", e.target.value)\r\n\r\n        this.setState({validationWarning: \"valid\"});\r\n\r\n        // this.activeAnswer = {};\r\n        this.setState({activeQuestionAnswer: {}});\r\n        \r\n        let option_id = e.target.id.toString();\r\n        let rangeValue = e.target.value;\r\n\r\n        this.activeAnswer[\"q_id\"] = question_bank[this.state.currentQuestion].question_id;\r\n        this.activeAnswer[option_id] = rangeValue;\r\n\r\n        this.setState({activeQuestionAnswer: this.activeAnswer});\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // console.log(\"componentDidUpdate invoked\");\r\n        // console.log(\"Already given Answer : \", this.userAnswers);\r\n        // console.log(prevState);\r\n\r\n        if(prevState.currentQuestion !== this.state.currentQuestion && this.userAnswers[this.state.currentQuestion]) {\r\n            let activeQuestionAnswer = this.userAnswers[this.state.currentQuestion];\r\n            this.setState({activeQuestionAnswer: activeQuestionAnswer});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let Question_Type=\"\";\r\n        let finishButton = <Button button_usage=\"Finish\" operation={() => {\r\n            if(this.state.validationWarning !== \"valid\") {\r\n                alert(\"Please fill answer\");\r\n            } else {\r\n                this.nextQuestion();\r\n                this.setState({showFinishMessage: true});                \r\n            }\r\n            \r\n        }} />\r\n\r\n        let nextButton = <Button operation={this.nextQuestion} button_usage=\"Next\" />;\r\n\r\n        const showFinishedButton = () => {\r\n            if(this.state.finished) {\r\n                return finishButton;\r\n            } else return nextButton\r\n        }\r\n\r\n        switch(question_bank[this.state.currentQuestion].type) {\r\n            case \"text\":\r\n                Question_Type = <Text active_index={this.state.currentQuestion} textAnswer={this.textAnswer} currentAnswer={this.state.activeQuestionAnswer}\r\n                question_object = {question_bank[this.state.currentQuestion]} validationWarning={this.state.validationWarning} />\r\n                break;\r\n\r\n            case \"radio\":\r\n                Question_Type = <Radio active_index={this.state.currentQuestion} radioAnswer={this.radioAnswer} currentAnswer={this.state.activeQuestionAnswer}\r\n                question_object = {question_bank[this.state.currentQuestion]} validationWarning={this.state.validationWarning} />\r\n                break;\r\n\r\n            case \"checkbox\":\r\n                Question_Type = <Checkbox active_index={this.state.currentQuestion} radioAnswer={this.radioAnswer} currentAnswer={this.state.activeQuestionAnswer}\r\n                question_object = {question_bank[this.state.currentQuestion]} validationWarning={this.state.validationWarning} />\r\n                break;\r\n\r\n            case \"range\":\r\n                Question_Type = <Range active_index={this.state.currentQuestion} rangeAnswer={this.rangeAnswer} currentAnswer={this.state.activeQuestionAnswer}\r\n                question_object = {question_bank[this.state.currentQuestion]} validationWarning={this.state.validationWarning} />\r\n                break;\r\n\r\n            case \"select\":\r\n                Question_Type = <SelectBox active_index={this.state.currentQuestion} selectAnswer={this.selectAnswer} currentAnswer={this.state.activeQuestionAnswer}\r\n                question_object = {question_bank[this.state.currentQuestion]} validationWarning={this.state.validationWarning}/>\r\n                break;\r\n            \r\n            default:\r\n                Question_Type = <Radio active_index={this.state.currentQuestion} currentAnswer={this.state.activeQuestionAnswer}\r\n                question_object = {question_bank[this.state.currentQuestion]} validationWarning={this.validationWarning} />\r\n        }\r\n\r\n            if(this.state.showFinishMessage) {\r\n                return(\r\n                    <Finish />\r\n                )\r\n            }\r\n\r\n            return (\r\n                <React.Fragment>\r\n                    <div className=\"row justify-content-center my-4\">\r\n                        <div className=\"col-1 py-5\">\r\n                            <Button operation={this.previousQuestion} button_usage=\"Previous\" />\r\n                        </div>\r\n                        <div className=\"col-6 border border-dark my-2\">\r\n                            \r\n                            {Question_Type}\r\n                            \r\n                        </div>\r\n                        <div className=\"col-1 py-5\">  \r\n                            {\r\n                                showFinishedButton()\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                \r\n                </React.Fragment>\r\n            )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Header from \"./header\"\r\nimport Footer from './footer'\r\nimport Quesitons from \"./questions\"\r\nimport \"./bootstrap.min.css\"\r\nimport \"./kbc.css\"\r\n\r\nexport default class KBC extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Quesitons />\r\n                <Footer />   \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport KBC from './KBC'\r\n\r\nReactDOM.render(<KBC />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}