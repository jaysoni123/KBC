{"version":3,"sources":["kbc.png","good_luck.gif","header.js","carousel.js","footer_smily.js","footer.js","Home.js","login_form.js","Login.js","participate.js","withLoginCheck.js","question_bank.js","validation.js","input_type_text.js","input_type_radio.js","input_type_range.js","input_type_select.js","input_type_checkbox.js","button.js","animation_styles.js","finish.js","questions.js","Survey.js","KBC.js","index.js"],"names":["module","exports","Header","props","componentDidMount","localStorage","setItem","setState","enableUpdate","componentDidUpdate","prtformLogin","current","console","log","onclick","prtformLogout","State","React","createRef","participateButton","loginButton","logoutButton","getItem","this","participateBtn","className","to","loginBtn","ref","logoutBtn","src","logo","alt","width","Component","Carousel","id","data-ride","process","href","role","data-slide","aria-hidden","Smily","goodluck","Footer","Home","Fragment","LoginForm","userData","email","pass","state","enterEmail","enterPass","navPath","validateLogin","type","value","onChange","e","target","key","onClick","enteredEmail","enteredPass","alert","handleLoginClick","Login","Participate","withLoginCheck","UnVarifiedComponent","loginStatus","question_bank","question_id","Question","Options","option_id","option","Answer","option_title","options","Validation","warning","status","Text","currentAnswer","question_object","map","current_option","currentOptionId","name","textAnswer","active_index","validationWarning","Radio","radioAnswer","checked","htmlFor","Range","currentOptionTitle","min","max","step","defaultValue","range_value","rangeAnswer","SelectBox","multiple_dropdown","current_option1","selectbox_options","selected","selectAnswer","Checkbox","Button","operation","button_usage","animationColors","backgroundColor","Finish","colors","timer","changeColors","setInterval","showMsg","letter","style","Math","floor","random","length","Questions","userAnswers","activeAnswer","currentQuestion","submited","activeQuestionAnswer","finished","showFinishMessage","previousQuestion","nextQuestion","Object","keys","splice","push","toString","answer","trim","selectedIndex","rangeValue","prevProps","prevState","Question_Type","finishButton","nextButton","Survey","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0409336b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kbc.cd5df429.png\";","module.exports = __webpack_public_path__ + \"static/media/good_luck.bdbc7ea6.gif\";","import React, { Component } from 'react'\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport logo from \"./kbc.png\"\r\n\r\nexport default class Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.State = {\r\n            enableUpdate: \"\"    // temporery state\r\n        }\r\n\r\n        this.prtformLogout = React.createRef();\r\n        this.prtformLogin = React.createRef();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        localStorage.setItem(\"enableUpdate\", \"\");\r\n        this.setState({enableUpdate: false});\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n\r\n        if(this.prtformLogin.current) {\r\n\r\n            console.log(this.prtformLogin.current);\r\n            this.prtformLogin.current.onclick = () => {\r\n\r\n                localStorage.setItem(\"enableUpdate\", true);\r\n                this.setState({enableUpdate: true});\r\n                \r\n            }\r\n        }\r\n\r\n        if(this.prtformLogout.current) {\r\n            console.log(this.prtformLogout.current);\r\n            this.prtformLogout.current.onclick = () => {\r\n                localStorage.setItem(\"enableUpdate\", false);\r\n                localStorage.setItem(\"userLoginStatus\", false)\r\n                this.setState({enableUpdate: true});\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(\"enable Update: \", localStorage.getItem(\"enableUpdate\"));\r\n        console.log(\"State\", this.State);\r\n\r\n        let participateButton, loginButton, logoutButton;\r\n\r\n        if(this.props.participateBtn) {\r\n            participateButton = <div className=\"col-auto\">\r\n                                    <Link className=\"btn btn-success\" to=\"/survey\" >Participate</Link>\r\n                                </div>\r\n        } else {\r\n            participateButton = null;\r\n        }\r\n\r\n        if(this.props.loginBtn) {\r\n            loginButton = <div className=\"col-auto\">\r\n                            <div className=\"btn btn-success\" ref={this.prtformLogin} >Login</div>\r\n                        </div>\r\n        } else {\r\n            loginButton = null;\r\n        }\r\n\r\n        if(this.props.logoutBtn) {\r\n            logoutButton = <div className=\"col-auto\">\r\n                                <div className=\"btn btn-danger\" to=\"/login\" ref={this.prtformLogout} >Logout</div>\r\n                            </div>\r\n        } else {\r\n            logoutButton = null;\r\n        }\r\n\r\n        if(localStorage.getItem(\"enableUpdate\") === \"true\") { \r\n            return <Redirect to=\"/login\" />\r\n        }\r\n\r\n        if(localStorage.getItem(\"enableUpdate\") === \"false\") {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        \r\n        return (\r\n            \r\n            <div className=\"row justify-content-center bg-primary\">\r\n                <div className=\"col-auto py-2\">\r\n                    <img src={logo} alt=\"logo\" width=\"100px\" />\r\n                </div>\r\n                <div className=\"col-auto py-3\">\r\n                    <h1 className=\"font-weight-bold title\">Kon Banega karodpati</h1>\r\n                </div>\r\n                <div className=\"col-auto py-3 justify-content-end\">\r\n                    <div className=\"row mt-2\">\r\n                        {participateButton}\r\n                        {loginButton}\r\n                        {logoutButton}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Carousel extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-8\">\r\n                    <div id=\"carouselExampleControls\" className=\"carousel slide\" data-ride=\"carousel\">\r\n                        <div className=\"carousel-inner\">\r\n                            <div className=\"carousel-item active\">\r\n                                <img className=\"d-block w-100\" src={process.env.PUBLIC_URL + \"pictures/dog.jpg\"} alt=\"Doremon\" />\r\n                            </div>\r\n                            <div className=\"carousel-item active\">\r\n                                <img className=\"d-block w-100\" src={process.env.PUBLIC_URL + \"pictures/doremon.jpg\"} alt=\"Doremon\" />\r\n                            </div>\r\n                        </div>\r\n                        <a className=\"carousel-control-prev\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"prev\">\r\n                            <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                            <span className=\"sr-only\">Previous</span>\r\n                        </a>\r\n                        <a className=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"next\">\r\n                            <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                            <span className=\"sr-only\">Next</span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport goodluck from \"./good_luck.gif\"\r\n\r\nexport default class Smily extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"col-1\">\r\n                <img src={goodluck} alt=\"Best of luck\" width=\"80px\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Smily from \"./footer_smily\"\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row footer bg-secondary py-2\">\r\n                <Smily />\r\n                <Smily />\r\n                <Smily />\r\n                <Smily />    \r\n                <div className=\"col-4 text-center py-2\">\r\n                    <h1 className=\"text-danger\">Best of Luck</h1>\r\n                </div>\r\n                <Smily />\r\n                <Smily />\r\n                <Smily />\r\n                <Smily />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Header from './header'\r\nimport Carousel from \"./carousel\"\r\nimport Footer from './footer'\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        // debugger;\r\n        console.log(\"home.js\")\r\n        return (\r\n            <React.Fragment>\r\n                <Header loginBtn={true} />\r\n                <Carousel />\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default class LoginForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            enterEmail: \"\",\r\n            enterPass:  \"\",\r\n            navPath: \"/login\"\r\n        }\r\n        this.validateLogin = React.createRef();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(\"Hello World\");\r\n    }\r\n\r\n    userData = {\r\n        email: \"soni.jay008@gmail.com\",\r\n        pass:   \"abcd\"\r\n    }\r\n\r\n    render() {\r\n\r\n        const handleLoginClick = () => {\r\n                console.log(\"handle click invoked\");\r\n                // alert(\"Hello World\");\r\n                // console.log(\"login Button : \", this.validateLogin.current);\r\n        \r\n                let enteredEmail = this.state.enterEmail;\r\n                let enteredPass =   this.state.enterPass;\r\n        \r\n                if(enteredEmail === this.userData.email && enteredPass === this.userData.pass) {\r\n                    this.setState({navPath: \"/participate\"});\r\n                    localStorage.setItem(\"userLoginStatus\", true);\r\n                    console.log(\"Logged In successful\")\r\n                } else {\r\n                    alert(\"Invalid Username or password\");\r\n                }\r\n\r\n                console.log(localStorage.getItem(\"userLoginStatus\"));\r\n            }\r\n    \r\n\r\n        return (\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-4\">\r\n                    <form>\r\n                        <div className=\"row card my-2 px-2 py-2\">\r\n                            <div className=\"col text-center h4 mt-2 mb-4\">\r\n                                Sign In\r\n                            </div>\r\n                            <div className=\"row my-2\">\r\n                                <div className=\"col-3\">\r\n                                    <label className=\"ml-2 font-weight-bold\">Email-Id :</label>\r\n                                </div>\r\n                                <div className=\"col-9\">\r\n                                    <input type=\"email\" className=\"form-control\" value={this.state.enterEmail} onChange={(e) => this.setState({enterEmail: e.target.value})} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row my-2\">\r\n                                <div className=\"col-3\">\r\n                                    <label  className=\"ml-2 font-weight-bold\">Password :</label>\r\n                                </div>\r\n                                <div className=\"col-9\">\r\n                                    <input type=\"password\" className=\"form-control\" value={this.state.enterPass} onChange={(e) => this.setState({enterPass: e.target.value})} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row my-2 justify-content-center\">\r\n                                <div className=\"col-auto\">\r\n                                    <NavLink key=\"navLink\" className=\"btn btn-primary\" type=\"button\" to={this.state.navPath} ref={this.validateLogin} onClick={() => handleLoginClick()} >Login</NavLink>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Header from \"./header\"\r\nimport Footer from \"./footer\"\r\nimport LoginForm from './login_form'\r\n\r\nexport default class Login extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <LoginForm />\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Header from \"./header\"\r\nimport Carousel from \"./carousel\"\r\nimport Footer from \"./footer\"\r\n\r\nexport default class Participate extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Header logoutBtn={true} participateBtn={true} />\r\n                <Carousel />\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Component } from 'react';\r\n\r\nconst withLoginCheck = (UnVarifiedComponent) => {\r\n\r\n    class VarifiedComponent extends Component {\r\n\r\n        state = {\r\n            loginStatus : false\r\n        }\r\n\r\n        componentDidMount = () => {\r\n            console.log(\"withLoginCheck.js login status :\",localStorage.getItem(\"userLoginStatus\"));\r\n            console.log(\"withLoginCheck\");\r\n            if(!localStorage.getItem(\"userLoginStatus\")) {\r\n                localStorage.setItem(\"userLoginStatus\", false)\r\n            }\r\n        }\r\n\r\n        render() {\r\n            return <UnVarifiedComponent {...this.state} />;\r\n        }\r\n    }\r\n    return VarifiedComponent;\r\n}\r\n\r\nexport default withLoginCheck;","const question_bank = [\r\n    {   \r\n        type: \"radio\",\r\n        question_id: 1,\r\n        Question: \"The language spoken by the people by Pakistan is ?\",\r\n        Options: [\r\n            {\r\n                option_id: 1,\r\n                option: \"Hindi\"\r\n            },\r\n            {\r\n                option_id: 2,\r\n                option: \"Palauan\"\r\n            },\r\n            {\r\n                option_id: 3,\r\n                option: \"Sindhi\"\r\n            },\r\n            {\r\n                option_id: 4,\r\n                option: \"Nauruan\"\r\n            },\r\n        ],\r\n        Answer: \"Sindhi\"\r\n    },\r\n    {\r\n        type: \"text\",\r\n        question_id: 2,\r\n        Question: \"The World Largest desert is ?\",\r\n        Options: [\r\n            {\r\n                option_id: 5,\r\n                option: \"Thar\"\r\n            },\r\n            {\r\n                option_id: 6,\r\n                option: \"Kalahari\"\r\n            },\r\n            {\r\n                option_id: 7,\r\n                option: \"Sahara\"\r\n            },\r\n            {\r\n                option_id: 8,\r\n                option: \"Sonoran\"\r\n            }\r\n        ],\r\n        Answer: \"Sahara\"\r\n    },\r\n    {\r\n        type: \"range\",\r\n        question_id: 3,\r\n        Question: \"How much increment you are expecting in your salary this year ?\",\r\n        Options: [\r\n            {\r\n                option_title: \"Minor\",\r\n                option_id: 9,\r\n                option: 10\r\n            },\r\n            {\r\n                option_title: \"Little\",\r\n                option_id: 10,\r\n                option: 25\r\n            },\r\n            {\r\n                option_title: \"More\",\r\n                option_id: 11,\r\n                option: 70\r\n            },\r\n            {\r\n                option_title: \"Very High\",\r\n                option_id: 12,\r\n                option: 85\r\n            }            \r\n        ],\r\n        Answer: \"\"\r\n    },\r\n    {\r\n        type: \"radio\",\r\n        question_id: 4,\r\n        Question: \"The metal whose salts are sensitive to light is ?\",\r\n        Options: [\r\n            {\r\n                option_id: 13,\r\n                option: \"Zinc\"\r\n            },\r\n            {\r\n                option_id: 14,\r\n                option: \"Silver\"\r\n            },\r\n            {\r\n                option_id: 15,\r\n                option: \"Copper\"\r\n            },\r\n            {\r\n                option_id: 16,\r\n                option: \"Aluminium\"\r\n            }\r\n        ],\r\n        Answer: \"Silver\"\r\n    },\r\n    {\r\n        type: \"radio\",\r\n        question_id: 5,\r\n        Question: \"10 + 20 - 6 * 5 = ?\",\r\n        Options: [\r\n            {\r\n                option_id: 17,\r\n                option: \"0\"\r\n            },\r\n            {\r\n                option_id: 18,\r\n                option: \"25\"\r\n            },\r\n            {\r\n                option_id: 19,\r\n                option: \"18\"\r\n            },\r\n            {\r\n                option_id: 20,\r\n                option: \"20\"\r\n            }\r\n        ],\r\n        Answer: \"0\"\r\n    },\r\n    {\r\n        type: \"text\",\r\n        question_id: 6,\r\n        Question: \"The Central Rice Research Station is situated in ?\",\r\n        Options: [\r\n            {\r\n                option_id: 21,\r\n                option: \"Chennai\"\r\n            },\r\n            {\r\n                option_id: 22,\r\n                option: \"Cuttack\"\r\n            },\r\n            {\r\n                option_id: 23,\r\n                option: \"Bangalore\"\r\n            },\r\n            {\r\n                option_id: 24,\r\n                option: \"Quilon\"\r\n            }\r\n        ],\r\n        Answer: \"Cuttack\"\r\n    },\r\n    {\r\n        type: \"select\",\r\n        question_id: 7,\r\n        Question: \"What is your Zodic sign ?\",\r\n        Options: [{\r\n            option_id: 25,\r\n            option_title: \"zodic signs\",\r\n            options: [\r\n                {\r\n                    option_id: 1,\r\n                    option: \"Aquarius\"\r\n                },\r\n                {\r\n                    option_id: 2,\r\n                    option: \"Pisces\"\r\n                },\r\n                {\r\n                    option_id: 3,\r\n                    option: \"Aries\"\r\n                },\r\n                {\r\n                    option_id: 4,\r\n                    option: \"Taurus\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            option_id: 26,\r\n            option_title: \"Animals\",\r\n            options: [\r\n                {\r\n                    option_id: 5,\r\n                    option: \"cow\"\r\n                },\r\n                {\r\n                    option_id: 6,\r\n                    option: \"Buffellow\"\r\n                },\r\n                {\r\n                    option_id: 7,\r\n                    option: \"Lion\"\r\n                },\r\n                {\r\n                    option_id: 8,\r\n                    option: \"Monkey\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            option_id: 27,\r\n            option_title: \"Guns\",\r\n            options: [\r\n                {\r\n                    option_id: 5,\r\n                    option: \"Desert-eagle\"\r\n                },\r\n                {\r\n                    option_id: 6,\r\n                    option: \"Ak-47\"\r\n                },\r\n                {\r\n                    option_id: 7,\r\n                    option: \"Barrett M82\"\r\n                },\r\n                {\r\n                    option_id: 8,\r\n                    option: \"smith & wesson\"\r\n                },\r\n                {\r\n                    option_id: 9,\r\n                    option: \"Glock-17\"\r\n                }\r\n            ]\r\n        }\r\n        ],\r\n        Answer: \"\"\r\n    },\r\n    {\r\n        type: \"radio\",\r\n        question_id: 8,\r\n        Question: \"What is the capital of India ?\",\r\n        Options: [\r\n            {\r\n                option_id: 28,\r\n                option: \"Bombay\"\r\n            },\r\n            {\r\n                option_id: 29,\r\n                option: \"Delhi\"\r\n            },\r\n            {\r\n                option_id: 30,\r\n                option: \"Ahmedabad\"\r\n            },\r\n            {\r\n                option_id: 31,\r\n                option: \"Kolkata\"\r\n            }\r\n        ],\r\n        Answer: \"Delhi\"\r\n    },\r\n    {\r\n        type: \"range\",\r\n        question_id: 9,\r\n        Question: \"How much you are interested in front-end ?\",\r\n        Options: [\r\n            {\r\n                option_title:\"less\",\r\n                option_id: 32,\r\n                option: 25\r\n            },\r\n            {\r\n                option_title:\"Medium\",\r\n                option_id: 33,\r\n                option: 50\r\n            },\r\n            {\r\n                option_title:\"More\",\r\n                option_id: 34,\r\n                option: 75\r\n            },\r\n            {\r\n                option_title:\"Passionate\",\r\n                option_id: 35,\r\n                option: 100\r\n            }            \r\n        ],\r\n        Answer: \"\"\r\n    },\r\n    {\r\n        type: \"checkbox\",\r\n        question_id: 10,\r\n        Question: \"Which one is your Favourite car ?\",\r\n        Options: [\r\n            {\r\n                option_id: 36,\r\n                option: \"Audi\"\r\n            },\r\n            {\r\n                option_id: 37,\r\n                option: \"Mercedes\"\r\n            },\r\n            {\r\n                option_id: 38,\r\n                option: \"Bugatti\"\r\n            },\r\n            {\r\n                option_id: 39,\r\n                option: \"scoda\"\r\n            },\r\n            {\r\n                option_id: 40,\r\n                option: \"farrari\"\r\n            },\r\n            {\r\n                option_id: 41,\r\n                option: \"lamborghini\"\r\n            },\r\n            {\r\n                option_id: 42,\r\n                option: \"rolls royce\"\r\n            },\r\n            {\r\n                option_id: 43,\r\n                option: \"Other\"\r\n            }\r\n            \r\n        ],\r\n        Answer: \"Audi\"\r\n    }\r\n];\r\n\r\nexport default question_bank;","import React, { Component } from 'react'\r\n\r\nexport default class Validation extends Component {\r\n    render() {\r\n        console.log(this.props.status);\r\n\r\n        let warning;\r\n\r\n        switch(this.props.type) {\r\n            case \"radio\":\r\n                warning = \"Please choose any option\";\r\n                break;\r\n\r\n            case \"select\":\r\n                warning = \"Please select Answer\";\r\n                break;\r\n\r\n            case \"text\":\r\n                warning = \"Please Enter Answer\";\r\n                break;\r\n\r\n            case \"range\":\r\n                warning = \"Please choose answer\";\r\n                break;\r\n\r\n            default:\r\n\r\n\r\n        }\r\n\r\n        if(this.props.status === \"valid\") {\r\n            return(\r\n                <div className=\"mt-4 d-none\">\r\n                    <h6 className=\"text-danger font-weight-bold\">{warning}</h6>\r\n                </div>\r\n            ) \r\n        } else {\r\n            return(\r\n                <div className=\"mt-4\">\r\n                    <h6 className=\"text-danger font-weight-bold\">{warning}</h6>\r\n                </div>\r\n            )   \r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Validation from \"./validation\"   // import Validation component for display validation status\r\n\r\nexport default class Text extends Component {\r\n    render() {\r\n        let currentAnswer = this.props.currentAnswer;\r\n\r\n        let options = this.props.question_object.Options.map((current_option) => {\r\n            // console.log(current_option.option_id);\r\n            let currentOptionId = current_option.option_id;\r\n            return(\r\n                <div className=\"col-12\" key={current_option.option_id}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <label className=\"font-weight-bold\">{current_option.option}</label>\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                            <input type=\"text\" name=\"kbc_option\" value={currentAnswer[currentOptionId]} id={currentOptionId}  className=\"form-control my-2\" onChange={this.props.textAnswer} />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            );\r\n        });\r\n\r\n        //console.log(\"text-options_objext\", this.props.question_object.Options);\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <h4 key={this.props.question_object.question_id}>\r\n                    <span className=\"mx-1\">Q.{this.props.active_index + 1}</span>\r\n                    {this.props.question_object.Question}\r\n                </h4>\r\n                <div className=\"row my-4\">\r\n                   {options} \r\n                </div>\r\n                <Validation status={this.props.validationWarning} type=\"text\" />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Validation from \"./validation\"   // import Validation component for display validation status\r\n\r\nexport default class Radio extends Component {\r\n    \r\n    render() {\r\n\r\n        let currentAnswer = this.props.currentAnswer;\r\n\r\n        let options = this.props.question_object.Options.map((current_option) => {\r\n\r\n                let currentOptionId = current_option.option_id;\r\n                return (\r\n                    <div className=\"col-6\" key={currentOptionId}>\r\n                        <input type=\"radio\" name=\"kbc_option\" id={currentOptionId} key={this.props.question_object.Options.option_id}\r\n                         value={this.props.question_object.Options.option} onChange={this.props.radioAnswer}\r\n                          checked={currentAnswer[currentOptionId]}  />\r\n                        <label htmlFor={currentOptionId}  className=\"font-weight-bold mx-1\">{current_option.option}</label>\r\n                    </div>\r\n                );\r\n            }); \r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h4 key={this.props.question_object.question_id}>\r\n                    <span className=\"mx-1\">Q.{this.props.active_index + 1}</span>\r\n                    {this.props.question_object.Question}\r\n                </h4>\r\n                <div className=\"row my-4\">\r\n                   {options}\r\n                </div>\r\n                <Validation status={this.props.validationWarning} type=\"radio\" />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Validation from \"./validation\"   // import Validation component for display validation status\r\n\r\nexport default class Range extends Component {\r\n\r\n    render() {\r\n\r\n        let currentAnswer = this.props.currentAnswer;\r\n        \r\n        // if(this.state.range_value !== this.props.currentAnswer.option_id) {\r\n        //     this.setState({range_value: this.props.currentAnswer.option_id}); \r\n        // }\r\n\r\n        // console.log(\"current Answer : \", this.props.currentAnswer.option_id);\r\n\r\n        let options = this.props.question_object.Options.map((current_option) => {\r\n\r\n            let currentOptionId = current_option.option_id;\r\n            let currentOptionTitle = current_option.option_title;\r\n\r\n            if(currentAnswer[currentOptionId]) {\r\n                return (\r\n                    <div className=\"col-12\" key={currentOptionId}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-2\">\r\n                                <label className=\"font-weight-bold\">{currentOptionTitle}</label>\r\n                            </div>\r\n                            <div className=\"col-9\">\r\n                                <input type=\"range\" id={currentOptionId} min={1} max={100} step={1} value={currentAnswer[currentOptionId]} defaultValue={current_option.option} name=\"kbc_option\" onChange={\r\n                                    (e) => {\r\n                                        this.setState({range_value: e.target.value});\r\n                                        this.props.rangeAnswer(e);\r\n                                    }\r\n                                } className=\"form-control\" />\r\n                            </div>\r\n                            <div className=\"col-1\">\r\n                                <label htmlFor={currentOptionId}>{currentAnswer[currentOptionId] + \"%\"}</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            \r\n            return (\r\n                <div className=\"col-12\" key={currentOptionId}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <label className=\"font-weight-bold\">{currentOptionTitle}</label>\r\n                        </div>\r\n                        <div className=\"col-9\">\r\n                            <input type=\"range\" id={currentOptionId} min={1} max={100} step={1} defaultValue={current_option.option} name=\"kbc_option\" onChange={\r\n                                (e) => {this.setState({range_value: e.target.value});\r\n                                    this.props.rangeAnswer(e);\r\n                                }\r\n                            } className=\"form-control\" />\r\n                        </div>\r\n                        <div className=\"col-1\">\r\n                            <label htmlFor={currentOptionId}>{current_option.option + \"%\"}</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h4 key={this.props.question_object.question_id}>\r\n                    <span className=\"mx-1\">Q.{this.props.active_index + 1}</span>\r\n                    {this.props.question_object.Question}\r\n                </h4>\r\n                <div className=\"row my-4\">\r\n                    {options}  \r\n                </div>\r\n                <Validation status={this.props.validationWarning} type=\"range\" />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Validation from \"./validation\"   // import Validation component for display validation status\r\n\r\nexport default class SelectBox extends Component {\r\n    render() {\r\n\r\n        let currentAnswer = this.props.currentAnswer;\r\n\r\n        // let selectbox_options = this.props.question_object.Options.map((current_option) => {\r\n        //     let currentOptionId = current_option.option_id;\r\n        //     return(\r\n        //         <option key={currentOptionId} id={currentOptionId} value={current_option.option} \r\n        //         >{current_option.option}</option>\r\n        //     );\r\n        // });\r\n\r\n        let multiple_dropdown = this.props.question_object.Options.map((current_option1) => {\r\n\r\n            console.log(\"current Option 1: \", current_option1);\r\n            let selectbox_options = current_option1.options.map((current_option) => {\r\n                let currentOptionId = current_option.option_id;\r\n                if(currentAnswer[currentOptionId]) {\r\n                    return(\r\n                        <option key={currentOptionId} id={currentOptionId} value={current_option.option} selected\r\n                        >{current_option.option}</option>\r\n                    );\r\n                }\r\n                return(\r\n                    <option key={currentOptionId} id={currentOptionId} value={current_option.option} \r\n                    >{current_option.option}</option>\r\n                );\r\n            });\r\n\r\n            return(\r\n                <div className=\"col-12 my-2\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <label className=\"font-weight-bold\">{current_option1.option_title}</label>\r\n                        </div>\r\n                        <div className=\"col-10\">\r\n                            <select className=\"form-control\" onChange={this.props.selectAnswer}>\r\n                                <option>Select</option>\r\n                                {selectbox_options}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h4 key={this.props.question_object.question_id}>\r\n                    <span className=\"mx-1\">Q.{this.props.active_index + 1}</span>\r\n                    {this.props.question_object.Question}\r\n                </h4>\r\n                \r\n                <div className=\"row my-4\">\r\n                    {multiple_dropdown}                \r\n                </div>\r\n                <Validation status={this.props.validationWarning} type=\"select\" />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Validation from \"./validation\"   // import Validation component for display validation status\r\n\r\nexport default class Checkbox extends Component {\r\n    \r\n    render() {\r\n\r\n        let currentAnswer = this.props.currentAnswer;\r\n\r\n        let options = this.props.question_object.Options.map((current_option) => {\r\n\r\n                let currentOptionId = current_option.option_id;\r\n                return (\r\n                    <div className=\"col-6\" key={currentOptionId}>\r\n                        <input type=\"checkbox\" name={current_option.option} id={currentOptionId} key={this.props.question_object.Options.option_id}\r\n                         value={current_option.option} onChange={this.props.radioAnswer}\r\n                          checked={currentAnswer[currentOptionId]}  />\r\n                        <label htmlFor={currentOptionId}  className=\"font-weight-bold mx-1\">{current_option.option}</label>\r\n                    </div>\r\n                );\r\n            }); \r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h4 key={this.props.question_object.question_id}>\r\n                    <span className=\"mx-1\">Q.{this.props.active_index + 1}</span>\r\n                    {this.props.question_object.Question}\r\n                </h4>\r\n                <div className=\"row my-4\">\r\n                   {options}\r\n                </div>\r\n                <Validation status={this.props.validationWarning} type=\"radio\" />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Button extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <button className=\"btn btn-success my-5\" onClick={this.props.operation}>{this.props.button_usage}</button>\r\n        )\r\n    }\r\n}\r\n","\r\n\r\nlet animationColors = [\r\n    {backgroundColor: \"#F0F8FF\"},\r\n    {backgroundColor: \"#FAEBD7\"},\r\n    {backgroundColor: \"#00FFFF\"},\r\n    {backgroundColor: \"#7FFFD4\"},\r\n    {backgroundColor: \"#FFEBCD\"},\r\n    {backgroundColor: \"#7FFF00\"},\r\n    {backgroundColor: \"#00FFFF\"},\r\n    {backgroundColor: \"#FF7F50\"},\r\n    {backgroundColor: \"#9932CC\"},\r\n    {backgroundColor: \"#FF8C00\"},\r\n    {backgroundColor: \"#9932CC\"},\r\n    {backgroundColor: \"#E9967A\"},\r\n    {backgroundColor: \"#9400D3\"},\r\n    {backgroundColor: \"#FF1493\"},\r\n    {backgroundColor: \"#696969\"},\r\n    {backgroundColor: \"#FFFAF0\"},\r\n    {backgroundColor: \"#FFD700\"},\r\n    {backgroundColor: \"#ADFF2F\"},\r\n    {backgroundColor: \"#F0FFF0\"},\r\n    {backgroundColor: \"#7CFC00\"},\r\n    {backgroundColor: \"#D3D3D3\"},\r\n    {backgroundColor: \"#87CEFA\"},\r\n    {backgroundColor: \"#F5DEB3\"},\r\n    {backgroundColor: \"#00FF7F\"},\r\n    {backgroundColor: \"#87CEEB\"},\r\n    {backgroundColor: \"#C0C0C0\"},\r\n    {backgroundColor: \"#FFC0CB\"},\r\n    {backgroundColor: \"#40E0D0\"},\r\n    {backgroundColor: \"#FF4500\"},\r\n    {backgroundColor: \"#C71585\"},\r\n    {backgroundColor: \"#FAF0E6\"},\r\n    {backgroundColor: \"#FFF0F5\"}\r\n];\r\n\r\nexport default animationColors;","import React, { Component } from 'react'\r\nimport animationColors from \"./animation_styles\"\r\n\r\nexport default class Finish extends Component {\r\n\r\n    state = {\r\n        colors: animationColors,\r\n        timer: 1\r\n    }\r\n\r\n    changeColors = () => {\r\n        if(this.state.colors[0] !== this.state.colors[0]) {\r\n            this.setState({colors: animationColors});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        setInterval(\r\n            this.changeColors(),1000\r\n        );\r\n\r\n        let msg = [\"H\", \"A\", \"V\", \"E\", \"\", \"A\", \"\", \"G\", \"O\", \"O\", \"D\", \"\", \"D\", \"A\", \"Y\"];\r\n        const showMsg = msg.map((letter) => {\r\n            return(\r\n                <div className=\"text-center\" style={this.state.colors[Math.floor(Math.random() * animationColors.length)]}>\r\n                    <span className=\"py-3 h4 px-4 font-weight-bold\">{letter}</span>\r\n                </div>\r\n            );\r\n        });\r\n\r\n\r\n        return (\r\n            <div className=\"row justify-content-center my-5\">\r\n                <div className=\"col-8\">\r\n                    <div className=\"h2 text-center text-success\">\r\n                        Participation Completed\r\n                        <span className=\"text-dark\">✔</span>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"row my-5\">\r\n                              {showMsg}\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport \"./kbc.css\"\r\nimport question_bank from \"./question_bank\"     // array of question's data\r\nimport Text from \"./input_type_text\"            // import Text component\r\nimport Radio from './input_type_radio'          // import Radio component\r\nimport Range from \"./input_type_range\"          // import Range component\r\nimport SelectBox from './input_type_select'     // import SelectBox component\r\nimport Checkbox from \"./input_type_checkbox\"    // import Checkbox component\r\nimport Button from \"./button\"                   // import Button component\r\nimport Finish from './finish'                   // import Finish component\r\n\r\nexport default class Questions extends Component {\r\n\r\n    userAnswers = [];               // stores all question's answer\r\n    activeAnswer = {};              // stores current active individual question's answer temporary          \r\n\r\n    state = {\r\n        currentQuestion: 0,         // current question object's index of question_bank array\r\n        submited: false,            // still not in use        \r\n        activeQuestionAnswer: {},   // stores current active individual question's answer in object temporary\r\n        validationWarning: \"valid\",\r\n        finished: false,\r\n        showFinishMessage: false\r\n    }\r\n\r\n    previousQuestion = () => { // for rander next question \r\n\r\n        this.setState({finished: false});\r\n\r\n        this.setState({validationWarning: \"valid\"});\r\n        // console.log(this.state.validationWarning);\r\n\r\n        if(this.state.currentQuestion > 0) {\r\n            this.setState({\r\n                currentQuestion: this.state.currentQuestion - 1          \r\n            });\r\n        }\r\n    }\r\n\r\n    nextQuestion = () => {  // for rander next question and also cleare activeAnswer & state.activeQuestionAnswer\r\n        \r\n        if(Object.keys(this.activeAnswer).length === 0) {   // validation for answer\r\n            if(!this.userAnswers[this.state.currentQuestion]) {\r\n                this.setState({validationWarning: \"invalid\"});\r\n                return false;\r\n            }\r\n        } \r\n\r\n        console.log(\"Current Question Index: \", this.state.currentQuestion);\r\n\r\n        if(this.userAnswers[this.state.currentQuestion]) {\r\n            if(this.state.currentQuestion > -1) {\r\n                this.userAnswers.splice(this.state.currentQuestion, 1);\r\n            }\r\n            this.userAnswers.splice(this.state.currentQuestion, 0, this.state.activeQuestionAnswer);\r\n        } else {\r\n            this.userAnswers.push(this.state.activeQuestionAnswer);\r\n        } \r\n\r\n        this.activeAnswer = {};\r\n        // this.userAnswers.push(this.state.activeQuestionAnswer);\r\n        this.setState({activeQuestionAnswer: {}});\r\n        console.log(this.userAnswers);\r\n\r\n        if(this.state.currentQuestion === (question_bank.length - 2)) {\r\n            this.setState({finished: true});\r\n        }\r\n\r\n        if(this.state.currentQuestion < (question_bank.length - 1) ) {\r\n            this.setState({currentQuestion: this.state.currentQuestion + 1});\r\n        }\r\n    }\r\n\r\n    textAnswer = (e) => {   // for store answer of input type text\r\n\r\n        // console.log(\"hello World\");\r\n\r\n        this.setState({validationWarning: \"valid\"});\r\n\r\n        let id= e.target.id.toString();\r\n        let answer = e.target.value;\r\n\r\n        if(answer.trim() !== \"\") {\r\n            this.activeAnswer[\"q_id\"] = question_bank[this.state.currentQuestion].question_id;\r\n            this.activeAnswer[id] = answer.trim();\r\n\r\n            this.setState({activeQuestionAnswer: this.activeAnswer});\r\n        }\r\n    }\r\n\r\n    selectAnswer = (e) => {  // for store answer of input type select\r\n\r\n        this.setState({validationWarning: \"valid\"});\r\n\r\n        // this.activeAnswer = {};\r\n        this.setState({activeQuestionAnswer: {}});\r\n\r\n        let option_id = e.target.options[e.target.selectedIndex].id.toString();\r\n        // let answer = e.target.options[e.target.selectedIndex].value;\r\n        // debugger;\r\n        this.activeAnswer[\"q_id\"] = question_bank[this.state.currentQuestion].question_id;\r\n        this.activeAnswer[option_id] = true;\r\n\r\n        console.log(this.activeAnswer);\r\n\r\n        this.setState({activeQuestionAnswer: this.activeAnswer});\r\n    }\r\n\r\n    radioAnswer = (e) => {  // for store answer of input type radio\r\n\r\n        this.setState({validationWarning: \"valid\"});\r\n\r\n        this.activeAnswer = {};\r\n        this.setState({activeQuestionAnswer: {}});\r\n\r\n        let option_id = e.target.id.toString();\r\n\r\n        this.activeAnswer[\"q_id\"] = question_bank[this.state.currentQuestion].question_id;\r\n        this.activeAnswer[option_id] = true;\r\n\r\n        this.setState({activeQuestionAnswer: this.activeAnswer});\r\n    }\r\n\r\n    rangeAnswer = (e) => {\r\n        //debugger;\r\n        // console.log(\"Hello World : \", e.target.value)\r\n\r\n        this.setState({validationWarning: \"valid\"});\r\n\r\n        // this.activeAnswer = {};\r\n        this.setState({activeQuestionAnswer: {}});\r\n        \r\n        let option_id = e.target.id.toString();\r\n        let rangeValue = e.target.value;\r\n\r\n        this.activeAnswer[\"q_id\"] = question_bank[this.state.currentQuestion].question_id;\r\n        this.activeAnswer[option_id] = rangeValue;\r\n\r\n        this.setState({activeQuestionAnswer: this.activeAnswer});\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // console.log(\"componentDidUpdate invoked\");\r\n        // console.log(\"Already given Answer : \", this.userAnswers);\r\n        // console.log(prevState);\r\n\r\n        if(prevState.currentQuestion !== this.state.currentQuestion && this.userAnswers[this.state.currentQuestion]) {\r\n            let activeQuestionAnswer = this.userAnswers[this.state.currentQuestion];\r\n            this.setState({activeQuestionAnswer: activeQuestionAnswer});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let Question_Type=\"\";\r\n        let finishButton = <Button button_usage=\"Finish\" operation={() => {\r\n            if(this.state.validationWarning !== \"valid\") {\r\n                alert(\"Please fill answer\");\r\n            } else {\r\n                this.nextQuestion();\r\n                this.setState({showFinishMessage: true});                \r\n            }\r\n            \r\n        }} />\r\n\r\n        let nextButton = <Button operation={this.nextQuestion} button_usage=\"Next\" />;\r\n\r\n        const showFinishedButton = () => {\r\n            if(this.state.finished) {\r\n                return finishButton;\r\n            } else return nextButton\r\n        }\r\n\r\n        switch(question_bank[this.state.currentQuestion].type) {\r\n            case \"text\":\r\n                Question_Type = <Text active_index={this.state.currentQuestion} textAnswer={this.textAnswer} currentAnswer={this.state.activeQuestionAnswer}\r\n                question_object = {question_bank[this.state.currentQuestion]} validationWarning={this.state.validationWarning} />\r\n                break;\r\n\r\n            case \"radio\":\r\n                Question_Type = <Radio active_index={this.state.currentQuestion} radioAnswer={this.radioAnswer} currentAnswer={this.state.activeQuestionAnswer}\r\n                question_object = {question_bank[this.state.currentQuestion]} validationWarning={this.state.validationWarning} />\r\n                break;\r\n\r\n            case \"checkbox\":\r\n                Question_Type = <Checkbox active_index={this.state.currentQuestion} radioAnswer={this.radioAnswer} currentAnswer={this.state.activeQuestionAnswer}\r\n                question_object = {question_bank[this.state.currentQuestion]} validationWarning={this.state.validationWarning} />\r\n                break;\r\n\r\n            case \"range\":\r\n                Question_Type = <Range active_index={this.state.currentQuestion} rangeAnswer={this.rangeAnswer} currentAnswer={this.state.activeQuestionAnswer}\r\n                question_object = {question_bank[this.state.currentQuestion]} validationWarning={this.state.validationWarning} />\r\n                break;\r\n\r\n            case \"select\":\r\n                Question_Type = <SelectBox active_index={this.state.currentQuestion} selectAnswer={this.selectAnswer} currentAnswer={this.state.activeQuestionAnswer}\r\n                question_object = {question_bank[this.state.currentQuestion]} validationWarning={this.state.validationWarning}/>\r\n                break;\r\n            \r\n            default:\r\n                Question_Type = <Radio active_index={this.state.currentQuestion} currentAnswer={this.state.activeQuestionAnswer}\r\n                question_object = {question_bank[this.state.currentQuestion]} validationWarning={this.validationWarning} />\r\n        }\r\n\r\n            if(this.state.showFinishMessage) {\r\n                return(\r\n                    <Finish />\r\n                )\r\n            }\r\n\r\n            return (\r\n                <React.Fragment>\r\n                    <div className=\"row justify-content-center my-4\">\r\n                        <div className=\"col-1 py-5\">\r\n                            <Button operation={this.previousQuestion} button_usage=\"Previous\" />\r\n                        </div>\r\n                        <div className=\"col-6 border border-dark my-2\">\r\n                            \r\n                            {Question_Type}\r\n                            \r\n                        </div>\r\n                        <div className=\"col-1 py-5\">  \r\n                            {\r\n                                showFinishedButton()\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                \r\n                </React.Fragment>\r\n            )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Header from \"./header\"\r\nimport Footer from \"./footer\"\r\nimport Question from \"./questions\"\r\n\r\nexport default class Survey extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <Question />\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Home from \"./Home\"\r\nimport Login from \"./Login\"\r\nimport \"./bootstrap.min.css\"\r\nimport \"./kbc.css\"\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport Participate from './participate'\r\nimport withLoginCheck from \"./withLoginCheck\"\r\nimport Survey from \"./Survey\"\r\n\r\nclass KBC extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    <Switch>\r\n                        <Route exact={true} path=\"KBC/\" component={Home} />\r\n                        <Route exact={true} path=\"KBC/login\" component={Login} />\r\n                        <Route exact={true} path=\"KBC/participate\" component={Participate} />\r\n                        <Route exact={true} path=\"KBC/survey\" component={Survey} />\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// export default KBC;\r\nexport default withLoginCheck(KBC);","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport KBC from './KBC'\r\n\r\nReactDOM.render(<KBC />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}