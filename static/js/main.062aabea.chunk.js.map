{"version":3,"sources":["kbc.png","good_luck.gif","header.js","carousel.js","footer_smily.js","footer.js","Home.js","login_form.js","Login.js","participate.js","withLoginCheck.js","question_bank.js","validation.js","input_type_text.js","input_type_radio.js","input_type_range.js","input_type_select.js","input_type_checkbox.js","button.js","animation_styles.js","finish.js","questions.js","Survey.js","KBC.js","index.js"],"names":["module","exports","Header","props","handleLogoutClick","localStorage","setItem","prtformLogout","React","createRef","participateButton","loginButton","logoutButton","this","participateBtn","className","to","loginBtn","logoutBtn","ref","src","logo","alt","width","Component","Carousel","id","data-ride","process","href","role","data-slide","aria-hidden","Smily","goodluck","Footer","Home","Fragment","LoginForm","userData","email","pass","state","enterEmail","enterPass","navPath","validateLogin","console","log","type","value","onChange","e","setState","target","key","onClick","enteredEmail","enteredPass","alert","getItem","handleLoginClick","Login","Participate","withLoginCheck","UnVarifiedComponent","componentDidMount","question_bank","question_id","Question","Options","option_id","option","Answer","option_title","options","Validation","warning","status","Text","currentAnswer","question_object","map","current_option","currentOptionId","name","textAnswer","active_index","validationWarning","Radio","radioAnswer","checked","htmlFor","Range","currentOptionTitle","min","max","step","defaultValue","range_value","rangeAnswer","SelectBox","multiple_dropdown","current_option1","selectbox_options","selected","selectAnswer","Checkbox","Button","operation","button_usage","animationColors","backgroundColor","Finish","colors","timer","changeColors","setInterval","showMsg","letter","style","Math","floor","random","length","Questions","userAnswers","activeAnswer","currentQuestion","submited","activeQuestionAnswer","finished","showFinishMessage","previousQuestion","nextQuestion","Object","keys","splice","push","toString","answer","trim","selectedIndex","rangeValue","prevProps","prevState","Question_Type","finishButton","nextButton","Survey","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.062aabea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kbc.cd5df429.png\";","module.exports = __webpack_public_path__ + \"static/media/good_luck.bdbc7ea6.gif\";","import React, { Component } from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport logo from \"./kbc.png\"\r\n\r\nexport default class Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.prtformLogout = React.createRef();\r\n    }\r\n\r\n    handleLogoutClick = () => {\r\n        localStorage.setItem(\"userLoginStatus\", false);\r\n    }\r\n\r\n    render() {\r\n\r\n        let participateButton, loginButton, logoutButton;\r\n\r\n        if(this.props.participateBtn) {\r\n            participateButton = <div className=\"col-auto\">\r\n                                    <NavLink className=\"btn btn-success\" to=\"/survey\" >Participate</NavLink>\r\n                                </div>\r\n        } else {\r\n            participateButton = null;\r\n        }\r\n\r\n        if(this.props.loginBtn) {\r\n            loginButton = <div className=\"col-auto\">\r\n                            <NavLink className=\"btn btn-success\" to=\"/login\">Login</NavLink>\r\n                        </div>\r\n        } else {\r\n            loginButton = null;\r\n        }\r\n\r\n        if(this.props.logoutBtn) {\r\n            logoutButton = <div className=\"col-auto\">\r\n                                <NavLink className=\"btn btn-danger\" to=\"/login\" ref={this.prtformLogout} >Logout</NavLink>\r\n                            </div>\r\n        } else {\r\n            logoutButton = null;\r\n        }\r\n\r\n        return (\r\n            <div className=\"row justify-content-center bg-primary\">\r\n                <div className=\"col-auto py-2\">\r\n                    <img src={logo} alt=\"logo\" width=\"100px\" />\r\n                </div>\r\n                <div className=\"col-auto py-3\">\r\n                    <h1 className=\"font-weight-bold title\">Kon Banega karodpati</h1>\r\n                </div>\r\n                <div className=\"col-auto py-3 justify-content-end\">\r\n                    <div className=\"row mt-2\">\r\n                        {participateButton}\r\n                        {loginButton}\r\n                        {logoutButton}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Carousel extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-8\">\r\n                    <div id=\"carouselExampleControls\" className=\"carousel slide\" data-ride=\"carousel\">\r\n                        <div className=\"carousel-inner\">\r\n                            <div className=\"carousel-item active\">\r\n                                <img className=\"d-block w-100\" src={process.env.PUBLIC_URL + \"pictures/dog.jpg\"} alt=\"Doremon\" />\r\n                            </div>\r\n                            <div className=\"carousel-item active\">\r\n                                <img className=\"d-block w-100\" src={process.env.PUBLIC_URL + \"pictures/doremon.jpg\"} alt=\"Doremon\" />\r\n                            </div>\r\n                        </div>\r\n                        <a className=\"carousel-control-prev\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"prev\">\r\n                            <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                            <span className=\"sr-only\">Previous</span>\r\n                        </a>\r\n                        <a className=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"next\">\r\n                            <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                            <span className=\"sr-only\">Next</span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport goodluck from \"./good_luck.gif\"\r\n\r\nexport default class Smily extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"col-1\">\r\n                <img src={goodluck} alt=\"Best of luck\" width=\"80px\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Smily from \"./footer_smily\"\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row footer bg-secondary py-2\">\r\n                <Smily />\r\n                <Smily />\r\n                <Smily />\r\n                <Smily />    \r\n                <div className=\"col-4 text-center py-2\">\r\n                    <h1 className=\"text-danger\">Best of Luck</h1>\r\n                </div>\r\n                <Smily />\r\n                <Smily />\r\n                <Smily />\r\n                <Smily />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Header from './header'\r\nimport Carousel from \"./carousel\"\r\nimport Footer from './footer'\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Header loginBtn={true} />\r\n                <Carousel />\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default class LoginForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            enterEmail: \"\",\r\n            enterPass:  \"\",\r\n            navPath: \"/login\"\r\n        }\r\n        this.validateLogin = React.createRef();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(\"Hello World\");\r\n    }\r\n\r\n    userData = {\r\n        email: \"soni.jay008@gmail.com\",\r\n        pass:   \"abcd\"\r\n    }\r\n\r\n    render() {\r\n\r\n        const handleLoginClick = () => {\r\n                console.log(\"handle click invoked\");\r\n                // alert(\"Hello World\");\r\n                // console.log(\"login Button : \", this.validateLogin.current);\r\n        \r\n                let enteredEmail = this.state.enterEmail;\r\n                let enteredPass =   this.state.enterPass;\r\n        \r\n                if(enteredEmail === this.userData.email && enteredPass === this.userData.pass) {\r\n                    this.setState({navPath: \"/participate\"});\r\n                    localStorage.setItem(\"userLoginStatus\", true);\r\n                    console.log(\"Logged In successful\")\r\n                } else {\r\n                    alert(\"Invalid Username or password\");\r\n                }\r\n\r\n                console.log(localStorage.getItem(\"userLoginStatus\"));\r\n            }\r\n    \r\n\r\n        return (\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-4\">\r\n                    <form>\r\n                        <div className=\"row card my-2 px-2 py-2\">\r\n                            <div className=\"col text-center h4 mt-2 mb-4\">\r\n                                Sign In\r\n                            </div>\r\n                            <div className=\"row my-2\">\r\n                                <div className=\"col-3\">\r\n                                    <label className=\"ml-2 font-weight-bold\">Email-Id :</label>\r\n                                </div>\r\n                                <div className=\"col-9\">\r\n                                    <input type=\"email\" className=\"form-control\" value={this.state.enterEmail} onChange={(e) => this.setState({enterEmail: e.target.value})} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row my-2\">\r\n                                <div className=\"col-3\">\r\n                                    <label  className=\"ml-2 font-weight-bold\">Password :</label>\r\n                                </div>\r\n                                <div className=\"col-9\">\r\n                                    <input type=\"password\" className=\"form-control\" value={this.state.enterPass} onChange={(e) => this.setState({enterPass: e.target.value})} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row my-2 justify-content-center\">\r\n                                <div className=\"col-auto\">\r\n                                    <NavLink key=\"navLink\" className=\"btn btn-primary\" type=\"button\" to={this.state.navPath} ref={this.validateLogin} onClick={() => handleLoginClick()} >Login</NavLink>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Header from \"./header\"\r\nimport Footer from \"./footer\"\r\nimport LoginForm from './login_form'\r\n\r\nexport default class Login extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <LoginForm />\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Header from \"./header\"\r\nimport Carousel from \"./carousel\"\r\nimport Footer from \"./footer\"\r\n\r\nexport default class Participate extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Header logoutBtn={true} participateBtn={true} />\r\n                <Carousel />\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Component } from 'react';\r\n\r\nconst withLoginCheck = (UnVarifiedComponent) => {\r\n    class VarifiedComponent extends Component {\r\n\r\n        componentDidMount = () => {\r\n            console.log(\"withLoginCheck.js login status :\",localStorage.getItem(\"userLoginStatus\"));\r\n            console.log(\"withLoginCheck\");\r\n            if(!localStorage.getItem(\"userLoginStatus\")) {\r\n                localStorage.setItem(\"userLoginStatus\", false)\r\n            }\r\n        }\r\n\r\n        render() {\r\n            return <UnVarifiedComponent />;\r\n        }\r\n    }\r\n    return VarifiedComponent;\r\n}\r\n\r\nexport default withLoginCheck;","const question_bank = [\r\n    {   \r\n        type: \"radio\",\r\n        question_id: 1,\r\n        Question: \"The language spoken by the people by Pakistan is ?\",\r\n        Options: [\r\n            {\r\n                option_id: 1,\r\n                option: \"Hindi\"\r\n            },\r\n            {\r\n                option_id: 2,\r\n                option: \"Palauan\"\r\n            },\r\n            {\r\n                option_id: 3,\r\n                option: \"Sindhi\"\r\n            },\r\n            {\r\n                option_id: 4,\r\n                option: \"Nauruan\"\r\n            },\r\n        ],\r\n        Answer: \"Sindhi\"\r\n    },\r\n    {\r\n        type: \"text\",\r\n        question_id: 2,\r\n        Question: \"The World Largest desert is ?\",\r\n        Options: [\r\n            {\r\n                option_id: 5,\r\n                option: \"Thar\"\r\n            },\r\n            {\r\n                option_id: 6,\r\n                option: \"Kalahari\"\r\n            },\r\n            {\r\n                option_id: 7,\r\n                option: \"Sahara\"\r\n            },\r\n            {\r\n                option_id: 8,\r\n                option: \"Sonoran\"\r\n            }\r\n        ],\r\n        Answer: \"Sahara\"\r\n    },\r\n    {\r\n        type: \"range\",\r\n        question_id: 3,\r\n        Question: \"How much increment you are expecting in your salary this year ?\",\r\n        Options: [\r\n            {\r\n                option_title: \"Minor\",\r\n                option_id: 9,\r\n                option: 10\r\n            },\r\n            {\r\n                option_title: \"Little\",\r\n                option_id: 10,\r\n                option: 25\r\n            },\r\n            {\r\n                option_title: \"More\",\r\n                option_id: 11,\r\n                option: 70\r\n            },\r\n            {\r\n                option_title: \"Very High\",\r\n                option_id: 12,\r\n                option: 85\r\n            }            \r\n        ],\r\n        Answer: \"\"\r\n    },\r\n    {\r\n        type: \"radio\",\r\n        question_id: 4,\r\n        Question: \"The metal whose salts are sensitive to light is ?\",\r\n        Options: [\r\n            {\r\n                option_id: 13,\r\n                option: \"Zinc\"\r\n            },\r\n            {\r\n                option_id: 14,\r\n                option: \"Silver\"\r\n            },\r\n            {\r\n                option_id: 15,\r\n                option: \"Copper\"\r\n            },\r\n            {\r\n                option_id: 16,\r\n                option: \"Aluminium\"\r\n            }\r\n        ],\r\n        Answer: \"Silver\"\r\n    },\r\n    {\r\n        type: \"radio\",\r\n        question_id: 5,\r\n        Question: \"10 + 20 - 6 * 5 = ?\",\r\n        Options: [\r\n            {\r\n                option_id: 17,\r\n                option: \"0\"\r\n            },\r\n            {\r\n                option_id: 18,\r\n                option: \"25\"\r\n            },\r\n            {\r\n                option_id: 19,\r\n                option: \"18\"\r\n            },\r\n            {\r\n                option_id: 20,\r\n                option: \"20\"\r\n            }\r\n        ],\r\n        Answer: \"0\"\r\n    },\r\n    {\r\n        type: \"text\",\r\n        question_id: 6,\r\n        Question: \"The Central Rice Research Station is situated in ?\",\r\n        Options: [\r\n            {\r\n                option_id: 21,\r\n                option: \"Chennai\"\r\n            },\r\n            {\r\n                option_id: 22,\r\n                option: \"Cuttack\"\r\n            },\r\n            {\r\n                option_id: 23,\r\n                option: \"Bangalore\"\r\n            },\r\n            {\r\n                option_id: 24,\r\n                option: \"Quilon\"\r\n            }\r\n        ],\r\n        Answer: \"Cuttack\"\r\n    },\r\n    {\r\n        type: \"select\",\r\n        question_id: 7,\r\n        Question: \"What is your Zodic sign ?\",\r\n        Options: [{\r\n            option_id: 25,\r\n            option_title: \"zodic signs\",\r\n            options: [\r\n                {\r\n                    option_id: 1,\r\n                    option: \"Aquarius\"\r\n                },\r\n                {\r\n                    option_id: 2,\r\n                    option: \"Pisces\"\r\n                },\r\n                {\r\n                    option_id: 3,\r\n                    option: \"Aries\"\r\n                },\r\n                {\r\n                    option_id: 4,\r\n                    option: \"Taurus\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            option_id: 26,\r\n            option_title: \"Animals\",\r\n            options: [\r\n                {\r\n                    option_id: 5,\r\n                    option: \"cow\"\r\n                },\r\n                {\r\n                    option_id: 6,\r\n                    option: \"Buffellow\"\r\n                },\r\n                {\r\n                    option_id: 7,\r\n                    option: \"Lion\"\r\n                },\r\n                {\r\n                    option_id: 8,\r\n                    option: \"Monkey\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            option_id: 27,\r\n            option_title: \"Guns\",\r\n            options: [\r\n                {\r\n                    option_id: 5,\r\n                    option: \"Desert-eagle\"\r\n                },\r\n                {\r\n                    option_id: 6,\r\n                    option: \"Ak-47\"\r\n                },\r\n                {\r\n                    option_id: 7,\r\n                    option: \"Barrett M82\"\r\n                },\r\n                {\r\n                    option_id: 8,\r\n                    option: \"smith & wesson\"\r\n                },\r\n                {\r\n                    option_id: 9,\r\n                    option: \"Glock-17\"\r\n                }\r\n            ]\r\n        }\r\n        ],\r\n        Answer: \"\"\r\n    },\r\n    {\r\n        type: \"radio\",\r\n        question_id: 8,\r\n        Question: \"What is the capital of India ?\",\r\n        Options: [\r\n            {\r\n                option_id: 28,\r\n                option: \"Bombay\"\r\n            },\r\n            {\r\n                option_id: 29,\r\n                option: \"Delhi\"\r\n            },\r\n            {\r\n                option_id: 30,\r\n                option: \"Ahmedabad\"\r\n            },\r\n            {\r\n                option_id: 31,\r\n                option: \"Kolkata\"\r\n            }\r\n        ],\r\n        Answer: \"Delhi\"\r\n    },\r\n    {\r\n        type: \"range\",\r\n        question_id: 9,\r\n        Question: \"How much you are interested in front-end ?\",\r\n        Options: [\r\n            {\r\n                option_title:\"less\",\r\n                option_id: 32,\r\n                option: 25\r\n            },\r\n            {\r\n                option_title:\"Medium\",\r\n                option_id: 33,\r\n                option: 50\r\n            },\r\n            {\r\n                option_title:\"More\",\r\n                option_id: 34,\r\n                option: 75\r\n            },\r\n            {\r\n                option_title:\"Passionate\",\r\n                option_id: 35,\r\n                option: 100\r\n            }            \r\n        ],\r\n        Answer: \"\"\r\n    },\r\n    {\r\n        type: \"checkbox\",\r\n        question_id: 10,\r\n        Question: \"Which one is your Favourite car ?\",\r\n        Options: [\r\n            {\r\n                option_id: 36,\r\n                option: \"Audi\"\r\n            },\r\n            {\r\n                option_id: 37,\r\n                option: \"Mercedes\"\r\n            },\r\n            {\r\n                option_id: 38,\r\n                option: \"Bugatti\"\r\n            },\r\n            {\r\n                option_id: 39,\r\n                option: \"scoda\"\r\n            },\r\n            {\r\n                option_id: 40,\r\n                option: \"farrari\"\r\n            },\r\n            {\r\n                option_id: 41,\r\n                option: \"lamborghini\"\r\n            },\r\n            {\r\n                option_id: 42,\r\n                option: \"rolls royce\"\r\n            },\r\n            {\r\n                option_id: 43,\r\n                option: \"Other\"\r\n            }\r\n            \r\n        ],\r\n        Answer: \"Audi\"\r\n    }\r\n];\r\n\r\nexport default question_bank;","import React, { Component } from 'react'\r\n\r\nexport default class Validation extends Component {\r\n    render() {\r\n        console.log(this.props.status);\r\n\r\n        let warning;\r\n\r\n        switch(this.props.type) {\r\n            case \"radio\":\r\n                warning = \"Please choose any option\";\r\n                break;\r\n\r\n            case \"select\":\r\n                warning = \"Please select Answer\";\r\n                break;\r\n\r\n            case \"text\":\r\n                warning = \"Please Enter Answer\";\r\n                break;\r\n\r\n            case \"range\":\r\n                warning = \"Please choose answer\";\r\n                break;\r\n\r\n            default:\r\n\r\n\r\n        }\r\n\r\n        if(this.props.status === \"valid\") {\r\n            return(\r\n                <div className=\"mt-4 d-none\">\r\n                    <h6 className=\"text-danger font-weight-bold\">{warning}</h6>\r\n                </div>\r\n            ) \r\n        } else {\r\n            return(\r\n                <div className=\"mt-4\">\r\n                    <h6 className=\"text-danger font-weight-bold\">{warning}</h6>\r\n                </div>\r\n            )   \r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Validation from \"./validation\"   // import Validation component for display validation status\r\n\r\nexport default class Text extends Component {\r\n    render() {\r\n        let currentAnswer = this.props.currentAnswer;\r\n\r\n        let options = this.props.question_object.Options.map((current_option) => {\r\n            // console.log(current_option.option_id);\r\n            let currentOptionId = current_option.option_id;\r\n            return(\r\n                <div className=\"col-12\" key={current_option.option_id}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <label className=\"font-weight-bold\">{current_option.option}</label>\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                            <input type=\"text\" name=\"kbc_option\" value={currentAnswer[currentOptionId]} id={currentOptionId}  className=\"form-control my-2\" onChange={this.props.textAnswer} />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            );\r\n        });\r\n\r\n        //console.log(\"text-options_objext\", this.props.question_object.Options);\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <h4 key={this.props.question_object.question_id}>\r\n                    <span className=\"mx-1\">Q.{this.props.active_index + 1}</span>\r\n                    {this.props.question_object.Question}\r\n                </h4>\r\n                <div className=\"row my-4\">\r\n                   {options} \r\n                </div>\r\n                <Validation status={this.props.validationWarning} type=\"text\" />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Validation from \"./validation\"   // import Validation component for display validation status\r\n\r\nexport default class Radio extends Component {\r\n    \r\n    render() {\r\n\r\n        let currentAnswer = this.props.currentAnswer;\r\n\r\n        let options = this.props.question_object.Options.map((current_option) => {\r\n\r\n                let currentOptionId = current_option.option_id;\r\n                return (\r\n                    <div className=\"col-6\" key={currentOptionId}>\r\n                        <input type=\"radio\" name=\"kbc_option\" id={currentOptionId} key={this.props.question_object.Options.option_id}\r\n                         value={this.props.question_object.Options.option} onChange={this.props.radioAnswer}\r\n                          checked={currentAnswer[currentOptionId]}  />\r\n                        <label htmlFor={currentOptionId}  className=\"font-weight-bold mx-1\">{current_option.option}</label>\r\n                    </div>\r\n                );\r\n            }); \r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h4 key={this.props.question_object.question_id}>\r\n                    <span className=\"mx-1\">Q.{this.props.active_index + 1}</span>\r\n                    {this.props.question_object.Question}\r\n                </h4>\r\n                <div className=\"row my-4\">\r\n                   {options}\r\n                </div>\r\n                <Validation status={this.props.validationWarning} type=\"radio\" />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Validation from \"./validation\"   // import Validation component for display validation status\r\n\r\nexport default class Range extends Component {\r\n\r\n    render() {\r\n\r\n        let currentAnswer = this.props.currentAnswer;\r\n        \r\n        // if(this.state.range_value !== this.props.currentAnswer.option_id) {\r\n        //     this.setState({range_value: this.props.currentAnswer.option_id}); \r\n        // }\r\n\r\n        // console.log(\"current Answer : \", this.props.currentAnswer.option_id);\r\n\r\n        let options = this.props.question_object.Options.map((current_option) => {\r\n\r\n            let currentOptionId = current_option.option_id;\r\n            let currentOptionTitle = current_option.option_title;\r\n\r\n            if(currentAnswer[currentOptionId]) {\r\n                return (\r\n                    <div className=\"col-12\" key={currentOptionId}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-2\">\r\n                                <label className=\"font-weight-bold\">{currentOptionTitle}</label>\r\n                            </div>\r\n                            <div className=\"col-9\">\r\n                                <input type=\"range\" id={currentOptionId} min={1} max={100} step={1} value={currentAnswer[currentOptionId]} defaultValue={current_option.option} name=\"kbc_option\" onChange={\r\n                                    (e) => {\r\n                                        this.setState({range_value: e.target.value});\r\n                                        this.props.rangeAnswer(e);\r\n                                    }\r\n                                } className=\"form-control\" />\r\n                            </div>\r\n                            <div className=\"col-1\">\r\n                                <label htmlFor={currentOptionId}>{currentAnswer[currentOptionId] + \"%\"}</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            \r\n            return (\r\n                <div className=\"col-12\" key={currentOptionId}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <label className=\"font-weight-bold\">{currentOptionTitle}</label>\r\n                        </div>\r\n                        <div className=\"col-9\">\r\n                            <input type=\"range\" id={currentOptionId} min={1} max={100} step={1} defaultValue={current_option.option} name=\"kbc_option\" onChange={\r\n                                (e) => {this.setState({range_value: e.target.value});\r\n                                    this.props.rangeAnswer(e);\r\n                                }\r\n                            } className=\"form-control\" />\r\n                        </div>\r\n                        <div className=\"col-1\">\r\n                            <label htmlFor={currentOptionId}>{current_option.option + \"%\"}</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h4 key={this.props.question_object.question_id}>\r\n                    <span className=\"mx-1\">Q.{this.props.active_index + 1}</span>\r\n                    {this.props.question_object.Question}\r\n                </h4>\r\n                <div className=\"row my-4\">\r\n                    {options}  \r\n                </div>\r\n                <Validation status={this.props.validationWarning} type=\"range\" />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Validation from \"./validation\"   // import Validation component for display validation status\r\n\r\nexport default class SelectBox extends Component {\r\n    render() {\r\n\r\n        let currentAnswer = this.props.currentAnswer;\r\n\r\n        // let selectbox_options = this.props.question_object.Options.map((current_option) => {\r\n        //     let currentOptionId = current_option.option_id;\r\n        //     return(\r\n        //         <option key={currentOptionId} id={currentOptionId} value={current_option.option} \r\n        //         >{current_option.option}</option>\r\n        //     );\r\n        // });\r\n\r\n        let multiple_dropdown = this.props.question_object.Options.map((current_option1) => {\r\n\r\n            console.log(\"current Option 1: \", current_option1);\r\n            let selectbox_options = current_option1.options.map((current_option) => {\r\n                let currentOptionId = current_option.option_id;\r\n                if(currentAnswer[currentOptionId]) {\r\n                    return(\r\n                        <option key={currentOptionId} id={currentOptionId} value={current_option.option} selected\r\n                        >{current_option.option}</option>\r\n                    );\r\n                }\r\n                return(\r\n                    <option key={currentOptionId} id={currentOptionId} value={current_option.option} \r\n                    >{current_option.option}</option>\r\n                );\r\n            });\r\n\r\n            return(\r\n                <div className=\"col-12 my-2\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <label className=\"font-weight-bold\">{current_option1.option_title}</label>\r\n                        </div>\r\n                        <div className=\"col-10\">\r\n                            <select className=\"form-control\" onChange={this.props.selectAnswer}>\r\n                                <option>Select</option>\r\n                                {selectbox_options}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h4 key={this.props.question_object.question_id}>\r\n                    <span className=\"mx-1\">Q.{this.props.active_index + 1}</span>\r\n                    {this.props.question_object.Question}\r\n                </h4>\r\n                \r\n                <div className=\"row my-4\">\r\n                    {multiple_dropdown}                \r\n                </div>\r\n                <Validation status={this.props.validationWarning} type=\"select\" />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Validation from \"./validation\"   // import Validation component for display validation status\r\n\r\nexport default class Checkbox extends Component {\r\n    \r\n    render() {\r\n\r\n        let currentAnswer = this.props.currentAnswer;\r\n\r\n        let options = this.props.question_object.Options.map((current_option) => {\r\n\r\n                let currentOptionId = current_option.option_id;\r\n                return (\r\n                    <div className=\"col-6\" key={currentOptionId}>\r\n                        <input type=\"checkbox\" name={current_option.option} id={currentOptionId} key={this.props.question_object.Options.option_id}\r\n                         value={current_option.option} onChange={this.props.radioAnswer}\r\n                          checked={currentAnswer[currentOptionId]}  />\r\n                        <label htmlFor={currentOptionId}  className=\"font-weight-bold mx-1\">{current_option.option}</label>\r\n                    </div>\r\n                );\r\n            }); \r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h4 key={this.props.question_object.question_id}>\r\n                    <span className=\"mx-1\">Q.{this.props.active_index + 1}</span>\r\n                    {this.props.question_object.Question}\r\n                </h4>\r\n                <div className=\"row my-4\">\r\n                   {options}\r\n                </div>\r\n                <Validation status={this.props.validationWarning} type=\"radio\" />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Button extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <button className=\"btn btn-success my-5\" onClick={this.props.operation}>{this.props.button_usage}</button>\r\n        )\r\n    }\r\n}\r\n","\r\n\r\nlet animationColors = [\r\n    {backgroundColor: \"#F0F8FF\"},\r\n    {backgroundColor: \"#FAEBD7\"},\r\n    {backgroundColor: \"#00FFFF\"},\r\n    {backgroundColor: \"#7FFFD4\"},\r\n    {backgroundColor: \"#FFEBCD\"},\r\n    {backgroundColor: \"#7FFF00\"},\r\n    {backgroundColor: \"#00FFFF\"},\r\n    {backgroundColor: \"#FF7F50\"},\r\n    {backgroundColor: \"#9932CC\"},\r\n    {backgroundColor: \"#FF8C00\"},\r\n    {backgroundColor: \"#9932CC\"},\r\n    {backgroundColor: \"#E9967A\"},\r\n    {backgroundColor: \"#9400D3\"},\r\n    {backgroundColor: \"#FF1493\"},\r\n    {backgroundColor: \"#696969\"},\r\n    {backgroundColor: \"#FFFAF0\"},\r\n    {backgroundColor: \"#FFD700\"},\r\n    {backgroundColor: \"#ADFF2F\"},\r\n    {backgroundColor: \"#F0FFF0\"},\r\n    {backgroundColor: \"#7CFC00\"},\r\n    {backgroundColor: \"#D3D3D3\"},\r\n    {backgroundColor: \"#87CEFA\"},\r\n    {backgroundColor: \"#F5DEB3\"},\r\n    {backgroundColor: \"#00FF7F\"},\r\n    {backgroundColor: \"#87CEEB\"},\r\n    {backgroundColor: \"#C0C0C0\"},\r\n    {backgroundColor: \"#FFC0CB\"},\r\n    {backgroundColor: \"#40E0D0\"},\r\n    {backgroundColor: \"#FF4500\"},\r\n    {backgroundColor: \"#C71585\"},\r\n    {backgroundColor: \"#FAF0E6\"},\r\n    {backgroundColor: \"#FFF0F5\"}\r\n];\r\n\r\nexport default animationColors;","import React, { Component } from 'react'\r\nimport animationColors from \"./animation_styles\"\r\n\r\nexport default class Finish extends Component {\r\n\r\n    state = {\r\n        colors: animationColors,\r\n        timer: 1\r\n    }\r\n\r\n    changeColors = () => {\r\n        if(this.state.colors[0] !== this.state.colors[0]) {\r\n            this.setState({colors: animationColors});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        setInterval(\r\n            this.changeColors(),1000\r\n        );\r\n\r\n        let msg = [\"H\", \"A\", \"V\", \"E\", \"\", \"A\", \"\", \"G\", \"O\", \"O\", \"D\", \"\", \"D\", \"A\", \"Y\"];\r\n        const showMsg = msg.map((letter) => {\r\n            return(\r\n                <div className=\"text-center\" style={this.state.colors[Math.floor(Math.random() * animationColors.length)]}>\r\n                    <span className=\"py-3 h4 px-4 font-weight-bold\">{letter}</span>\r\n                </div>\r\n            );\r\n        });\r\n\r\n\r\n        return (\r\n            <div className=\"row justify-content-center my-5\">\r\n                <div className=\"col-8\">\r\n                    <div className=\"h2 text-center text-success\">\r\n                        Participation Completed\r\n                        <span className=\"text-dark\">✔</span>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"row my-5\">\r\n                              {showMsg}\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport \"./kbc.css\"\r\nimport question_bank from \"./question_bank\"     // array of question's data\r\nimport Text from \"./input_type_text\"            // import Text component\r\nimport Radio from './input_type_radio'          // import Radio component\r\nimport Range from \"./input_type_range\"          // import Range component\r\nimport SelectBox from './input_type_select'     // import SelectBox component\r\nimport Checkbox from \"./input_type_checkbox\"    // import Checkbox component\r\nimport Button from \"./button\"                   // import Button component\r\nimport Finish from './finish'                   // import Finish component\r\n\r\nexport default class Questions extends Component {\r\n\r\n    userAnswers = [];               // stores all question's answer\r\n    activeAnswer = {};              // stores current active individual question's answer temporary          \r\n\r\n    state = {\r\n        currentQuestion: 0,         // current question object's index of question_bank array\r\n        submited: false,            // still not in use        \r\n        activeQuestionAnswer: {},   // stores current active individual question's answer in object temporary\r\n        validationWarning: \"valid\",\r\n        finished: false,\r\n        showFinishMessage: false\r\n    }\r\n\r\n    previousQuestion = () => { // for rander next question \r\n\r\n        this.setState({finished: false});\r\n\r\n        this.setState({validationWarning: \"valid\"});\r\n        // console.log(this.state.validationWarning);\r\n\r\n        if(this.state.currentQuestion > 0) {\r\n            this.setState({\r\n                currentQuestion: this.state.currentQuestion - 1          \r\n            });\r\n        }\r\n    }\r\n\r\n    nextQuestion = () => {  // for rander next question and also cleare activeAnswer & state.activeQuestionAnswer\r\n        \r\n        if(Object.keys(this.activeAnswer).length === 0) {   // validation for answer\r\n            if(!this.userAnswers[this.state.currentQuestion]) {\r\n                this.setState({validationWarning: \"invalid\"});\r\n                return false;\r\n            }\r\n        } \r\n\r\n        console.log(\"Current Question Index: \", this.state.currentQuestion);\r\n\r\n        if(this.userAnswers[this.state.currentQuestion]) {\r\n            if(this.state.currentQuestion > -1) {\r\n                this.userAnswers.splice(this.state.currentQuestion, 1);\r\n            }\r\n            this.userAnswers.splice(this.state.currentQuestion, 0, this.state.activeQuestionAnswer);\r\n        } else {\r\n            this.userAnswers.push(this.state.activeQuestionAnswer);\r\n        } \r\n\r\n        this.activeAnswer = {};\r\n        // this.userAnswers.push(this.state.activeQuestionAnswer);\r\n        this.setState({activeQuestionAnswer: {}});\r\n        console.log(this.userAnswers);\r\n\r\n        if(this.state.currentQuestion === (question_bank.length - 2)) {\r\n            this.setState({finished: true});\r\n        }\r\n\r\n        if(this.state.currentQuestion < (question_bank.length - 1) ) {\r\n            this.setState({currentQuestion: this.state.currentQuestion + 1});\r\n        }\r\n    }\r\n\r\n    textAnswer = (e) => {   // for store answer of input type text\r\n\r\n        // console.log(\"hello World\");\r\n\r\n        this.setState({validationWarning: \"valid\"});\r\n\r\n        let id= e.target.id.toString();\r\n        let answer = e.target.value;\r\n\r\n        if(answer.trim() !== \"\") {\r\n            this.activeAnswer[\"q_id\"] = question_bank[this.state.currentQuestion].question_id;\r\n            this.activeAnswer[id] = answer.trim();\r\n\r\n            this.setState({activeQuestionAnswer: this.activeAnswer});\r\n        }\r\n    }\r\n\r\n    selectAnswer = (e) => {  // for store answer of input type select\r\n\r\n        this.setState({validationWarning: \"valid\"});\r\n\r\n        // this.activeAnswer = {};\r\n        this.setState({activeQuestionAnswer: {}});\r\n\r\n        let option_id = e.target.options[e.target.selectedIndex].id.toString();\r\n        // let answer = e.target.options[e.target.selectedIndex].value;\r\n        // debugger;\r\n        this.activeAnswer[\"q_id\"] = question_bank[this.state.currentQuestion].question_id;\r\n        this.activeAnswer[option_id] = true;\r\n\r\n        console.log(this.activeAnswer);\r\n\r\n        this.setState({activeQuestionAnswer: this.activeAnswer});\r\n    }\r\n\r\n    radioAnswer = (e) => {  // for store answer of input type radio\r\n\r\n        this.setState({validationWarning: \"valid\"});\r\n\r\n        this.activeAnswer = {};\r\n        this.setState({activeQuestionAnswer: {}});\r\n\r\n        let option_id = e.target.id.toString();\r\n\r\n        this.activeAnswer[\"q_id\"] = question_bank[this.state.currentQuestion].question_id;\r\n        this.activeAnswer[option_id] = true;\r\n\r\n        this.setState({activeQuestionAnswer: this.activeAnswer});\r\n    }\r\n\r\n    rangeAnswer = (e) => {\r\n        //debugger;\r\n        // console.log(\"Hello World : \", e.target.value)\r\n\r\n        this.setState({validationWarning: \"valid\"});\r\n\r\n        // this.activeAnswer = {};\r\n        this.setState({activeQuestionAnswer: {}});\r\n        \r\n        let option_id = e.target.id.toString();\r\n        let rangeValue = e.target.value;\r\n\r\n        this.activeAnswer[\"q_id\"] = question_bank[this.state.currentQuestion].question_id;\r\n        this.activeAnswer[option_id] = rangeValue;\r\n\r\n        this.setState({activeQuestionAnswer: this.activeAnswer});\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // console.log(\"componentDidUpdate invoked\");\r\n        // console.log(\"Already given Answer : \", this.userAnswers);\r\n        // console.log(prevState);\r\n\r\n        if(prevState.currentQuestion !== this.state.currentQuestion && this.userAnswers[this.state.currentQuestion]) {\r\n            let activeQuestionAnswer = this.userAnswers[this.state.currentQuestion];\r\n            this.setState({activeQuestionAnswer: activeQuestionAnswer});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let Question_Type=\"\";\r\n        let finishButton = <Button button_usage=\"Finish\" operation={() => {\r\n            if(this.state.validationWarning !== \"valid\") {\r\n                alert(\"Please fill answer\");\r\n            } else {\r\n                this.nextQuestion();\r\n                this.setState({showFinishMessage: true});                \r\n            }\r\n            \r\n        }} />\r\n\r\n        let nextButton = <Button operation={this.nextQuestion} button_usage=\"Next\" />;\r\n\r\n        const showFinishedButton = () => {\r\n            if(this.state.finished) {\r\n                return finishButton;\r\n            } else return nextButton\r\n        }\r\n\r\n        switch(question_bank[this.state.currentQuestion].type) {\r\n            case \"text\":\r\n                Question_Type = <Text active_index={this.state.currentQuestion} textAnswer={this.textAnswer} currentAnswer={this.state.activeQuestionAnswer}\r\n                question_object = {question_bank[this.state.currentQuestion]} validationWarning={this.state.validationWarning} />\r\n                break;\r\n\r\n            case \"radio\":\r\n                Question_Type = <Radio active_index={this.state.currentQuestion} radioAnswer={this.radioAnswer} currentAnswer={this.state.activeQuestionAnswer}\r\n                question_object = {question_bank[this.state.currentQuestion]} validationWarning={this.state.validationWarning} />\r\n                break;\r\n\r\n            case \"checkbox\":\r\n                Question_Type = <Checkbox active_index={this.state.currentQuestion} radioAnswer={this.radioAnswer} currentAnswer={this.state.activeQuestionAnswer}\r\n                question_object = {question_bank[this.state.currentQuestion]} validationWarning={this.state.validationWarning} />\r\n                break;\r\n\r\n            case \"range\":\r\n                Question_Type = <Range active_index={this.state.currentQuestion} rangeAnswer={this.rangeAnswer} currentAnswer={this.state.activeQuestionAnswer}\r\n                question_object = {question_bank[this.state.currentQuestion]} validationWarning={this.state.validationWarning} />\r\n                break;\r\n\r\n            case \"select\":\r\n                Question_Type = <SelectBox active_index={this.state.currentQuestion} selectAnswer={this.selectAnswer} currentAnswer={this.state.activeQuestionAnswer}\r\n                question_object = {question_bank[this.state.currentQuestion]} validationWarning={this.state.validationWarning}/>\r\n                break;\r\n            \r\n            default:\r\n                Question_Type = <Radio active_index={this.state.currentQuestion} currentAnswer={this.state.activeQuestionAnswer}\r\n                question_object = {question_bank[this.state.currentQuestion]} validationWarning={this.validationWarning} />\r\n        }\r\n\r\n            if(this.state.showFinishMessage) {\r\n                return(\r\n                    <Finish />\r\n                )\r\n            }\r\n\r\n            return (\r\n                <React.Fragment>\r\n                    <div className=\"row justify-content-center my-4\">\r\n                        <div className=\"col-1 py-5\">\r\n                            <Button operation={this.previousQuestion} button_usage=\"Previous\" />\r\n                        </div>\r\n                        <div className=\"col-6 border border-dark my-2\">\r\n                            \r\n                            {Question_Type}\r\n                            \r\n                        </div>\r\n                        <div className=\"col-1 py-5\">  \r\n                            {\r\n                                showFinishedButton()\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                \r\n                </React.Fragment>\r\n            )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Header from \"./header\"\r\nimport Footer from \"./footer\"\r\nimport Question from \"./questions\"\r\n\r\nexport default class Survey extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <Question />\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Home from \"./Home\"\r\nimport Login from \"./Login\"\r\nimport \"./bootstrap.min.css\"\r\nimport \"./kbc.css\"\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport Participate from './participate'\r\nimport withLoginCheck from \"./withLoginCheck\"\r\nimport Survey from \"./Survey\"\r\n\r\nclass KBC extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    <Switch>\r\n                        <Route exact={true} path=\"/\" component={Home} />\r\n                        <Route exact={true} path=\"/login\" component={Login} />\r\n                        <Route exact={true} path=\"/participate\" component={Participate} />\r\n                        <Route exact={true} path=\"/survey\" component={Survey} />\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// export default KBC;\r\nexport default withLoginCheck(KBC);","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport KBC from './KBC'\r\n\r\nReactDOM.render(<KBC />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}