{"version":3,"sources":["kbc.png","good_luck.gif","header.js","footer_smily.js","footer.js","question_bank.js","validation.js","input_type_text.js","input_type_radio.js","input_type_range.js","input_type_select.js","button.js","animation_styles.js","finish.js","questions.js","KBC.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","width","Component","Smily","goodluck","Footer","question_bank","type","question_id","Question","Options","option_id","option","Answer","Validation","warning","console","log","this","props","status","Text","currentAnswer","options","question_object","map","current_option","currentOptionId","key","name","value","id","onChange","textAnswer","Fragment","active_index","validationWarning","Radio","radioAnswer","checked","htmlFor","Range","state","range_value","min","max","step","e","setState","target","rangeAnswer","SelectBox","selectbox_options","selected","selectAnswer","Button","onClick","operation","button_usage","animationColors","backgroundColor","Finish","colors","timer","changeColors","setInterval","showMsg","letter","style","Math","floor","random","length","Questions","userAnswers","activeAnswer","currentQuestion","submited","activeQuestionAnswer","finished","showFinishMessage","previousQuestion","nextQuestion","Object","keys","splice","push","toString","answer","trim","selectedIndex","rangeValue","prevProps","prevState","Question_Type","finishButton","KBC","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4bc64526.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kbc.cd5df429.png\";","module.exports = __webpack_public_path__ + \"static/media/good_luck.bdbc7ea6.gif\";","import React, { Component } from 'react'\r\nimport logo from \"./kbc.png\"\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-center bg-primary\">\r\n                <div className=\"col-auto py-2\">\r\n                    <img src={logo} alt=\"logo\" width=\"100px\" />\r\n                </div>\r\n                <div className=\"col-auto py-3\">\r\n                    <h1 className=\"font-weight-bold title\">Kon Banega karodpati</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport goodluck from \"./good_luck.gif\"\r\n\r\nexport default class Smily extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"col-1\">\r\n                <img src={goodluck} alt=\"Best of luck\" width=\"80px\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Smily from \"./footer_smily\"\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row footer bg-secondary py-2\">\r\n                <Smily />\r\n                <Smily />\r\n                <Smily />\r\n                <Smily />    \r\n                <div className=\"col-4 text-center py-2\">\r\n                    <h1 className=\"text-danger\">Best of Luck</h1>\r\n                </div>\r\n                <Smily />\r\n                <Smily />\r\n                <Smily />\r\n                <Smily />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const question_bank = [\r\n    {   \r\n        type: \"radio\",\r\n        question_id: 1,\r\n        Question: \"The language spoken by the people by Pakistan is ?\",\r\n        Options: [\r\n            {\r\n                option_id: 1,\r\n                option: \"Hindi\"\r\n            },\r\n            {\r\n                option_id: 2,\r\n                option: \"Palauan\"\r\n            },\r\n            {\r\n                option_id: 3,\r\n                option: \"Sindhi\"\r\n            },\r\n            {\r\n                option_id: 4,\r\n                option: \"Nauruan\"\r\n            },\r\n        ],\r\n        Answer: \"Sindhi\"\r\n    },\r\n    {\r\n        type: \"text\",\r\n        question_id: 2,\r\n        Question: \"The World Largest desert is ?\",\r\n        Options: [\r\n            {\r\n                option_id: 1,\r\n                option: \"Thar\"\r\n            },\r\n            {\r\n                option_id: 2,\r\n                option: \"Kalahari\"\r\n            },\r\n            {\r\n                option_id: 3,\r\n                option: \"Sahara\"\r\n            },\r\n            {\r\n                option_id: 4,\r\n                option: \"Sonoran\"\r\n            }\r\n        ],\r\n        Answer: \"Sahara\"\r\n    },\r\n    {\r\n        type: \"range\",\r\n        question_id: 3,\r\n        Question: \"How much increment you are expecting in your salary this year ?\",\r\n        Options: [\r\n            {\r\n                option_id: 1,\r\n                option: 10\r\n            },\r\n            {\r\n                option_id: 2,\r\n                option: 25\r\n            },\r\n            {\r\n                option_id: 3,\r\n                option: 70\r\n            },\r\n            {\r\n                option_id: 4,\r\n                option: 85\r\n            }            \r\n        ],\r\n        Answer: \"\"\r\n    },\r\n    {\r\n        type: \"radio\",\r\n        question_id: 4,\r\n        Question: \"The metal whose salts are sensitive to light is ?\",\r\n        Options: [\r\n            {\r\n                option_id: 1,\r\n                option: \"Zinc\"\r\n            },\r\n            {\r\n                option_id: 2,\r\n                option: \"Silver\"\r\n            },\r\n            {\r\n                option_id: 3,\r\n                option: \"Copper\"\r\n            },\r\n            {\r\n                option_id: 4,\r\n                option: \"Aluminium\"\r\n            }\r\n        ],\r\n        Answer: \"Silver\"\r\n    },\r\n    {\r\n        type: \"text\",\r\n        question_id: 5,\r\n        Question: \"10 + 20 - 6 * 5 = ?\",\r\n        Options: [\r\n            {\r\n                option_id: 1,\r\n                option: \"0\"\r\n            },\r\n            {\r\n                option_id: 2,\r\n                option: \"25\"\r\n            },\r\n            {\r\n                option_id: 3,\r\n                option: \"18\"\r\n            },\r\n            {\r\n                option_id: 4,\r\n                option: \"20\"\r\n            }\r\n        ],\r\n        Answer: \"0\"\r\n    },\r\n    {\r\n        type: \"text\",\r\n        question_id: 6,\r\n        Question: \"The Central Rice Research Station is situated in ?\",\r\n        Options: [\r\n            {\r\n                option_id: 1,\r\n                option: \"Chennai\"\r\n            },\r\n            {\r\n                option_id: 2,\r\n                option: \"Cuttack\"\r\n            },\r\n            {\r\n                option_id: 3,\r\n                option: \"Bangalore\"\r\n            },\r\n            {\r\n                option_id: 4,\r\n                option: \"Quilon\"\r\n            }\r\n        ],\r\n        Answer: \"Cuttack\"\r\n    },\r\n    {\r\n        type: \"select\",\r\n        question_id: 7,\r\n        Question: \"What is your Zodic sign ?\",\r\n        Options: [\r\n            {\r\n                option_id: 1,\r\n                option: \"Aquarius\"\r\n            },\r\n            {\r\n                option_id: 2,\r\n                option: \"Pisces\"\r\n            },\r\n            {\r\n                option_id: 3,\r\n                option: \"Aries\"\r\n            },\r\n            {\r\n                option_id: 4,\r\n                option: \"Taurus\"\r\n            },\r\n            {\r\n                option_id: 5,\r\n                option: \"Gemini\"\r\n            },\r\n            {\r\n                option_id: 6,\r\n                option: \"Cancer\"\r\n            },\r\n            {\r\n                option_id: 7,\r\n                option: \"leo\"\r\n            },\r\n            {\r\n                option_id: 8,\r\n                option: \"Virgo\"\r\n            },\r\n            {\r\n                option_id: 9,\r\n                option: \"Libra\"\r\n            },\r\n            {\r\n                option_id: 10,\r\n                option: \"Scorpio\"\r\n            },\r\n            {\r\n                option_id: 11,\r\n                option: \"Sagittarius\"\r\n            },\r\n            {\r\n                option_id: 12,\r\n                option: \"Capricorn\"\r\n            }\r\n        ],\r\n        Answer: \"\"\r\n    },\r\n    {\r\n        type: \"radio\",\r\n        question_id: 8,\r\n        Question: \"What is the capital of India ?\",\r\n        Options: [\r\n            {\r\n                option_id: 1,\r\n                option: \"Bombay\"\r\n            },\r\n            {\r\n                option_id: 2,\r\n                option: \"Delhi\"\r\n            },\r\n            {\r\n                option_id: 3,\r\n                option: \"Ahmedabad\"\r\n            },\r\n            {\r\n                option_id: 4,\r\n                option: \"Kolkata\"\r\n            }\r\n        ],\r\n        Answer: \"Delhi\"\r\n    },\r\n    {\r\n        type: \"range\",\r\n        question_id: 9,\r\n        Question: \"How much you are interested in front-end ?\",\r\n        Options: [\r\n            {\r\n                option_id: 1,\r\n                option: 25\r\n            },\r\n            {\r\n                option_id: 2,\r\n                option: 50\r\n            },\r\n            {\r\n                option_id: 3,\r\n                option: 75\r\n            },\r\n            {\r\n                option_id: 4,\r\n                option: 100\r\n            }            \r\n        ],\r\n        Answer: \"\"\r\n    },\r\n    {\r\n        type: \"radio\",\r\n        question_id: 10,\r\n        Question: \"Which one is your Favourite car ?\",\r\n        Options: [\r\n            {\r\n                option_id: 1,\r\n                option: \"Audi\"\r\n            },\r\n            {\r\n                option_id: 2,\r\n                option: \"Mercedes\"\r\n            },\r\n            {\r\n                option_id: 3,\r\n                option: \"Bugatti\"\r\n            },\r\n            {\r\n                option_id: 4,\r\n                option: \"scoda\"\r\n            },\r\n            {\r\n                option_id: 5,\r\n                option: \"farrari\"\r\n            },\r\n            {\r\n                option_id: 6,\r\n                option: \"lamborghini\"\r\n            },\r\n            {\r\n                option_id: 7,\r\n                option: \"rolls royce\"\r\n            },\r\n            {\r\n                option_id: 8,\r\n                option: \"Other\"\r\n            }\r\n            \r\n        ],\r\n        Answer: \"Audi\"\r\n    }\r\n];\r\n\r\nexport default question_bank;","import React, { Component } from 'react'\r\n\r\nexport default class Validation extends Component {\r\n    render() {\r\n        console.log(this.props.status);\r\n\r\n        let warning;\r\n\r\n        switch(this.props.type) {\r\n            case \"radio\":\r\n                warning = \"Please choose any option\";\r\n                break;\r\n\r\n            case \"select\":\r\n                warning = \"Please select Answer\";\r\n                break;\r\n\r\n            case \"text\":\r\n                warning = \"Please Enter Answer\";\r\n                break;\r\n\r\n            case \"range\":\r\n                warning = \"Please choose answer\";\r\n                break;\r\n\r\n            default:\r\n\r\n\r\n        }\r\n\r\n        if(this.props.status === \"valid\") {\r\n            return(\r\n                <div className=\"mt-4 d-none\">\r\n                    <h6 className=\"text-danger font-weight-bold\">{warning}</h6>\r\n                </div>\r\n            ) \r\n        } else {\r\n            return(\r\n                <div className=\"mt-4\">\r\n                    <h6 className=\"text-danger font-weight-bold\">{warning}</h6>\r\n                </div>\r\n            )   \r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Validation from \"./validation\"   // import Validation component for display validation status\r\n\r\nexport default class Text extends Component {\r\n    render() {\r\n        let currentAnswer = this.props.currentAnswer;\r\n\r\n        let options = this.props.question_object.Options.map((current_option) => {\r\n            // console.log(current_option.option_id);\r\n\r\n            let currentOptionId = current_option.option_id;\r\n            \r\n            return(\r\n                <div className=\"col-6\" key={current_option.option_id}>\r\n                    <input type=\"text\" name=\"kbc_option\" value={currentAnswer[currentOptionId]} id={currentOptionId}  className=\"form-control my-2\" onChange={this.props.textAnswer} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        //console.log(\"text-options_objext\", this.props.question_object.Options);\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <h4 key={this.props.question_object.question_id}>\r\n                    <span className=\"mx-1\">Q.{this.props.active_index + 1}</span>\r\n                    {this.props.question_object.Question}\r\n                </h4>\r\n                <div className=\"row my-4\">\r\n                   {options} \r\n                </div>\r\n                <Validation status={this.props.validationWarning} type=\"text\" />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Validation from \"./validation\"   // import Validation component for display validation status\r\n\r\nexport default class Radio extends Component {\r\n    \r\n    render() {\r\n\r\n        let currentAnswer = this.props.currentAnswer;\r\n\r\n        let options = this.props.question_object.Options.map((current_option) => {\r\n\r\n                let currentOptionId = current_option.option_id;\r\n                return (\r\n                    <div className=\"col-6\" key={currentOptionId}>\r\n                        <input type=\"radio\" name=\"kbc_option\" id={currentOptionId} key={this.props.question_object.Options.option_id}\r\n                         value={this.props.question_object.Options.option} onChange={this.props.radioAnswer}\r\n                          checked={currentAnswer[currentOptionId]}  />\r\n                        <label htmlFor={currentOptionId}  className=\"font-weight-bold mx-1\">{current_option.option}</label>\r\n                    </div>\r\n                );\r\n            }); \r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h4 key={this.props.question_object.question_id}>\r\n                    <span className=\"mx-1\">Q.{this.props.active_index + 1}</span>\r\n                    {this.props.question_object.Question}\r\n                </h4>\r\n                <div className=\"row my-4\">\r\n                   {options}\r\n                </div>\r\n                <Validation status={this.props.validationWarning} type=\"radio\" />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Validation from \"./validation\"   // import Validation component for display validation status\r\n\r\nexport default class Range extends Component {\r\n\r\n    state = {\r\n        range_value: 0\r\n    }\r\n\r\n    render() {\r\n\r\n        // let currentAnswer = this.props.currentAnswer.option_id;\r\n        \r\n        // if(this.state.range_value !== this.props.currentAnswer.option_id) {\r\n        //     this.setState({range_value: this.props.currentAnswer.option_id}); \r\n        // }\r\n\r\n        // console.log(\"current Answer : \", this.props.currentAnswer.option_id);\r\n\r\n        let options = this.props.question_object.Options.map((current_option) => {\r\n\r\n            let currentOptionId = current_option.option_id;\r\n            return (\r\n                <div className=\"col\" key={currentOptionId}>\r\n                        <input type=\"range\" id={currentOptionId} min={1} max={100} step={1} value={current_option.option} name=\"kbc_option\" onChange={\r\n                            (e) => {this.setState({range_value: e.target.value});\r\n                            this.props.rangeAnswer(e);\r\n                            }\r\n                        } className=\"form-control\" />\r\n                        <label htmlFor={currentOptionId}>{current_option.option + \"%\"}</label>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h4 key={this.props.question_object.question_id}>\r\n                    <span className=\"mx-1\">Q.{this.props.active_index + 1}</span>\r\n                    {this.props.question_object.Question}\r\n                </h4>\r\n                <div className=\"row my-4\">\r\n                    <div className=\"col\">\r\n                        {options}\r\n                    </div>           \r\n                </div>\r\n                <Validation status={this.props.validationWarning} type=\"range\" />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Validation from \"./validation\"   // import Validation component for display validation status\r\n\r\nexport default class SelectBox extends Component {\r\n    render() {\r\n\r\n        let currentAnswer = this.props.currentAnswer;\r\n\r\n        let selectbox_options = this.props.question_object.Options.map((current_option) => {\r\n            let currentOptionId = current_option.option_id;\r\n            return(\r\n                <option key={currentOptionId} id={currentOptionId} value={current_option.option} \r\n                selected={currentAnswer[currentOptionId]}>{current_option.option}</option>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h4 key={this.props.question_object.question_id}>\r\n                    <span className=\"mx-1\">Q.{this.props.active_index + 1}</span>\r\n                    {this.props.question_object.Question}\r\n                </h4>\r\n                \r\n                <div className=\"row my-4\">\r\n                    <div className=\"col-6\">\r\n                        <select className=\"form-control\" onChange={this.props.selectAnswer}>\r\n                            {selectbox_options}\r\n                        </select>\r\n                    </div>                   \r\n                </div>\r\n                <Validation status={this.props.validationWarning} type=\"select\" />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Button extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <button className=\"btn btn-success my-5\" onClick={this.props.operation}>{this.props.button_usage}</button>\r\n        )\r\n    }\r\n}\r\n","\r\n\r\nlet animationColors = [\r\n    {backgroundColor: \"#F0F8FF\"},\r\n    {backgroundColor: \"#FAEBD7\"},\r\n    {backgroundColor: \"#00FFFF\"},\r\n    {backgroundColor: \"#7FFFD4\"},\r\n    {backgroundColor: \"#FFEBCD\"},\r\n    {backgroundColor: \"#7FFF00\"},\r\n    {backgroundColor: \"#00FFFF\"},\r\n    {backgroundColor: \"#FF7F50\"},\r\n    {backgroundColor: \"#9932CC\"},\r\n    {backgroundColor: \"#FF8C00\"},\r\n    {backgroundColor: \"#9932CC\"},\r\n    {backgroundColor: \"#E9967A\"},\r\n    {backgroundColor: \"#9400D3\"},\r\n    {backgroundColor: \"#FF1493\"},\r\n    {backgroundColor: \"#696969\"},\r\n    {backgroundColor: \"#FFFAF0\"},\r\n    {backgroundColor: \"#FFD700\"},\r\n    {backgroundColor: \"#ADFF2F\"},\r\n    {backgroundColor: \"#F0FFF0\"},\r\n    {backgroundColor: \"#7CFC00\"},\r\n    {backgroundColor: \"#D3D3D3\"},\r\n    {backgroundColor: \"#87CEFA\"},\r\n    {backgroundColor: \"#F5DEB3\"},\r\n    {backgroundColor: \"#00FF7F\"},\r\n    {backgroundColor: \"#87CEEB\"},\r\n    {backgroundColor: \"#C0C0C0\"},\r\n    {backgroundColor: \"#FFC0CB\"},\r\n    {backgroundColor: \"#40E0D0\"},\r\n    {backgroundColor: \"#FF4500\"},\r\n    {backgroundColor: \"#C71585\"},\r\n    {backgroundColor: \"#FAF0E6\"},\r\n    {backgroundColor: \"#FFF0F5\"}\r\n];\r\n\r\nexport default animationColors;","import React, { Component } from 'react'\r\nimport animationColors from \"./animation_styles\"\r\n\r\nexport default class Finish extends Component {\r\n\r\n    state = {\r\n        colors: animationColors,\r\n        timer: 1\r\n    }\r\n\r\n    changeColors = () => {\r\n        if(this.state.colors[0] !== this.state.colors[0]) {\r\n            this.setState({colors: animationColors});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        setInterval(\r\n            this.changeColors(),1000\r\n        );\r\n\r\n        let msg = [\"H\", \"A\", \"V\", \"E\", \"\", \"A\", \"\", \"G\", \"O\", \"O\", \"D\", \"\", \"D\", \"A\", \"Y\"];\r\n        const showMsg = msg.map((letter) => {\r\n            return(\r\n                <div className=\"text-center\" style={this.state.colors[Math.floor(Math.random() * animationColors.length)]}>\r\n                    <span className=\"py-3 h4 px-4 font-weight-bold\">{letter}</span>\r\n                </div>\r\n            );\r\n        });\r\n\r\n\r\n        return (\r\n            <div className=\"row justify-content-center my-5\">\r\n                <div className=\"col-8\">\r\n                    <div className=\"h2 text-center text-success\">\r\n                        Participation Completed\r\n                        <span className=\"text-dark\">✔</span>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"row my-5\">\r\n                              {showMsg}\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport \"./kbc.css\"\r\nimport question_bank from \"./question_bank\"     // array of question's data\r\nimport Text from \"./input_type_text\"            // import Text component\r\nimport Radio from './input_type_radio'          // import Radio component\r\nimport Range from \"./input_type_range\"          // import Range component\r\nimport SelectBox from './input_type_select'     // import SelectBox component\r\nimport Button from \"./button\"                   // import Button component\r\nimport Finish from './finish'                   // import Finish component\r\n\r\nexport default class Questions extends Component {\r\n\r\n    userAnswers = [];               // stores all question's answer\r\n    activeAnswer = {};              // stores current active individual question's answer temporary          \r\n\r\n    state = {\r\n        currentQuestion: 0,         // current question object's index of question_bank array\r\n        submited: false,            // still not in use        \r\n        activeQuestionAnswer: {},   // stores current active individual question's answer in object temporary\r\n        validationWarning: \"valid\",\r\n        finished: false,\r\n        showFinishMessage: false\r\n    }\r\n\r\n    previousQuestion = () => { // for rander next question \r\n\r\n        this.setState({finished: false});\r\n\r\n        this.setState({validationWarning: \"valid\"});\r\n        // console.log(this.state.validationWarning);\r\n\r\n        if(this.state.currentQuestion > 0) {\r\n            this.setState({\r\n                currentQuestion: this.state.currentQuestion - 1          \r\n            });\r\n        }\r\n    }\r\n\r\n    nextQuestion = () => {  // for rander next question and also cleare activeAnswer & state.activeQuestionAnswer\r\n            \r\n        if(Object.keys(this.activeAnswer).length === 0) {   // validation for answer\r\n            if(!this.userAnswers[this.state.currentQuestion]) {\r\n                this.setState({validationWarning: \"invalid\"});\r\n                return false;\r\n            }\r\n        } \r\n\r\n        if(this.userAnswers[this.state.currentQuestion]) {\r\n            if(this.state.currentQuestion > -1) {\r\n                this.userAnswers.splice(this.state.currentQuestion, 1);\r\n            }\r\n            this.userAnswers.splice(this.state.currentQuestion, 0, this.state.activeQuestionAnswer);\r\n        }\r\n\r\n        this.activeAnswer = {};\r\n        this.userAnswers.push(this.state.activeQuestionAnswer);\r\n        this.setState({activeQuestionAnswer: {}});\r\n        console.log(this.userAnswers);\r\n\r\n        if(this.state.currentQuestion === (question_bank.length - 2)) {\r\n            this.setState({finished: true});\r\n        }\r\n\r\n        if(this.state.currentQuestion < (question_bank.length - 1) ) {\r\n            this.setState({currentQuestion: this.state.currentQuestion + 1});\r\n        }\r\n    }\r\n\r\n    textAnswer = (e) => {   // for store answer of input type text\r\n\r\n        console.log(\"hello World\");\r\n\r\n        this.setState({validationWarning: \"valid\"});\r\n\r\n        let id= e.target.id.toString();\r\n        let answer = e.target.value;\r\n\r\n        if(answer.trim() !== \"\") {\r\n            this.activeAnswer[\"q_id\"] = question_bank[this.state.currentQuestion].question_id;\r\n            this.activeAnswer[id] = answer.trim();\r\n\r\n            this.setState({activeQuestionAnswer: this.activeAnswer});\r\n        }\r\n    }\r\n\r\n    selectAnswer = (e) => {  // for store answer of input type select\r\n\r\n        this.setState({validationWarning: \"valid\"});\r\n\r\n        this.activeAnswer = {};\r\n        this.setState({activeQuestionAnswer: {}});\r\n\r\n        let option_id = e.target.options[e.target.selectedIndex].id.toString();\r\n\r\n        this.activeAnswer[\"q_id\"] = question_bank[this.state.currentQuestion].question_id;\r\n        this.activeAnswer[option_id] = true;\r\n\r\n        this.setState({activeQuestionAnswer: this.activeAnswer});\r\n    }\r\n\r\n    radioAnswer = (e) => {  // for store answer of input type radio\r\n\r\n        this.setState({validationWarning: \"valid\"});\r\n\r\n        this.activeAnswer = {};\r\n        this.setState({activeQuestionAnswer: {}});\r\n\r\n        let option_id = e.target.id.toString();\r\n\r\n        this.activeAnswer[\"q_id\"] = question_bank[this.state.currentQuestion].question_id;\r\n        this.activeAnswer[option_id] = true;\r\n\r\n        this.setState({activeQuestionAnswer: this.activeAnswer});\r\n    }\r\n\r\n    rangeAnswer = (e) => {\r\n        //debugger;\r\n        // console.log(\"Hello World : \", e.target.value)\r\n\r\n        this.setState({validationWarning: \"valid\"});\r\n\r\n        this.activeAnswer = {};\r\n        this.setState({activeQuestionAnswer: {}});\r\n        \r\n        let rangeValue = e.target.value;\r\n\r\n        this.activeAnswer[\"q_id\"] = question_bank[this.state.currentQuestion].question_id;\r\n        this.activeAnswer[\"option_id\"] = rangeValue;\r\n\r\n        this.setState({activeQuestionAnswer: this.activeAnswer});\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // console.log(\"componentDidUpdate invoked\");\r\n        // console.log(\"Already given Answer : \", this.userAnswers);\r\n        console.log(prevState);\r\n\r\n        if(prevState.currentQuestion !== this.state.currentQuestion && this.userAnswers[this.state.currentQuestion]) {\r\n            let activeQuestionAnswer = this.userAnswers[this.state.currentQuestion];\r\n            this.setState({activeQuestionAnswer: activeQuestionAnswer});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let Question_Type=\"\";\r\n        let finishButton = <Button button_usage=\"Finish\" operation={() => this.setState({showFinishMessage: true})} />\r\n\r\n        const showFinishedButton = () => {\r\n            if(this.state.finished) {\r\n                return finishButton;\r\n            } else return null\r\n        }\r\n\r\n        switch(question_bank[this.state.currentQuestion].type) {\r\n            case \"text\":\r\n                Question_Type = <Text active_index={this.state.currentQuestion} textAnswer={this.textAnswer} currentAnswer={this.state.activeQuestionAnswer}\r\n                question_object = {question_bank[this.state.currentQuestion]} validationWarning={this.state.validationWarning} />\r\n                break;\r\n\r\n            case \"radio\":\r\n                Question_Type = <Radio active_index={this.state.currentQuestion} radioAnswer={this.radioAnswer} currentAnswer={this.state.activeQuestionAnswer}\r\n                question_object = {question_bank[this.state.currentQuestion]} validationWarning={this.state.validationWarning} />\r\n                break;\r\n\r\n            case \"range\":\r\n                Question_Type = <Range active_index={this.state.currentQuestion} rangeAnswer={this.rangeAnswer} currentAnswer={this.state.activeQuestionAnswer}\r\n                question_object = {question_bank[this.state.currentQuestion]} validationWarning={this.state.validationWarning} />\r\n                break;\r\n\r\n            case \"select\":\r\n                Question_Type = <SelectBox active_index={this.state.currentQuestion} selectAnswer={this.selectAnswer} currentAnswer={this.state.activeQuestionAnswer}\r\n                question_object = {question_bank[this.state.currentQuestion]} validationWarning={this.state.validationWarning}/>\r\n                break;\r\n            \r\n            default:\r\n                Question_Type = <Radio active_index={this.state.currentQuestion} currentAnswer={this.state.activeQuestionAnswer}\r\n                question_object = {question_bank[this.state.currentQuestion]} validationWarning={this.validationWarning} />\r\n        }\r\n\r\n            if(this.state.showFinishMessage) {\r\n                return(\r\n                    <Finish />\r\n                )\r\n            }\r\n\r\n            return (\r\n                <React.Fragment>\r\n                    <div className=\"row justify-content-center my-4\">\r\n                        <div className=\"col-1 py-5\">\r\n                            <Button operation={this.previousQuestion} button_usage=\"Previous\" />\r\n                        </div>\r\n                        <div className=\"col-6 border border-dark my-2\">\r\n                            \r\n                            {Question_Type}\r\n                            \r\n                        </div>\r\n                        <div className=\"col-1 py-5\">\r\n                            <Button operation={this.nextQuestion} button_usage=\"Next\" />  \r\n                            {\r\n                                showFinishedButton()\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                \r\n                </React.Fragment>\r\n            )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Header from \"./header\"\r\nimport Footer from './footer'\r\nimport Quesitons from \"./questions\"\r\nimport \"./bootstrap.min.css\"\r\nimport \"./kbc.css\"\r\n\r\nexport default class KBC extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Quesitons />\r\n                <Footer />   \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport KBC from './KBC'\r\n\r\nReactDOM.render(<KBC />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}