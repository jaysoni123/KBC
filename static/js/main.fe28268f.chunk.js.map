{"version":3,"sources":["kbc.png","good_luck.gif","header.js","footer_smily.js","footer.js","question_bank.js","questions.js","KBC.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","width","Component","Smily","goodluck","Footer","question_bank","type","Question","Options","Answer","Questions","Answers","no","answer","state","currentQuestion","submited","options","this","name","onChange","e","target","value","map","key","id","checked","htmlFor","min","max","step","selectbox_options","Fragment","onClick","setState","Math","floor","random","KBC","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe28268f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kbc.cd5df429.png\";","module.exports = __webpack_public_path__ + \"static/media/good_luck.bdbc7ea6.gif\";","import React, { Component } from 'react'\r\nimport logo from \"./kbc.png\"\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-center bg-primary\">\r\n                <div className=\"col-auto py-2\">\r\n                    <img src={logo} alt=\"logo\" width=\"100px\" />\r\n                </div>\r\n                <div className=\"col-auto py-3\">\r\n                    <h1 className=\"font-weight-bold title\">Kon Banega karodpati</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport goodluck from \"./good_luck.gif\"\r\n\r\nexport default class Smily extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"col-1\">\r\n                <img src={goodluck} alt=\"Best of luck\" width=\"80px\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Smily from \"./footer_smily\"\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row footer bg-secondary py-2\">\r\n                <Smily />\r\n                <Smily />\r\n                <Smily />\r\n                <Smily />    \r\n                <div className=\"col-4 text-center py-2\">\r\n                    <h1 className=\"text-danger\">Best of Luck</h1>\r\n                </div>\r\n                <Smily />\r\n                <Smily />\r\n                <Smily />\r\n                <Smily />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const question_bank = [\r\n    {   \r\n        type: \"radio\",\r\n        Question: \"The language spoken by the people by Pakistan is ?\",\r\n        Options: [\r\n            \"Hindi\",\r\n            \"Palauan\",\r\n            \"Sindhi\",\r\n            \"Nauruan\"\r\n        ],\r\n        Answer: \"Sindhi\"\r\n    },\r\n    {\r\n        type: \"text\",\r\n        Question: \"The World Largest desert is ?\",\r\n        Options: [\r\n            \"Thar\",\r\n            \"Kalahari\",\r\n            \"Sahara\",\r\n            \"Sonoran\"\r\n        ],\r\n        Answer: \"Sahara\"\r\n    },\r\n    {\r\n        type: \"range\",\r\n        Question: \"How much increment you are expecting in your salary this year ?\",\r\n        Options: [\r\n            \r\n        ],\r\n        Answer: \"\"\r\n    },\r\n    {\r\n        type: \"radio\",\r\n        Question: \"The metal whose salts are sensitive to light is ?\",\r\n        Options: [\r\n            \"Zinc\",\r\n            \"Silver\",\r\n            \"Copper\",\r\n            \"Aluminium\"\r\n        ],\r\n        Answer: \"Silver\"\r\n    },\r\n    {\r\n        type: \"text\",\r\n        Question: \"10 + 20 - 6 * 5 = ?\",\r\n        Options: [\r\n\r\n        ],\r\n        Answer: \"0\"\r\n    },\r\n    {\r\n        type: \"text\",\r\n        Question: \"The Central Rice Research Station is situated in ?\",\r\n        Options: [\r\n            \"Chennai\",\r\n            \"Cuttack\",\r\n            \"Bangalore\",\r\n            \"Quilon\"\r\n        ],\r\n        Answer: \"Cuttack\"\r\n    },\r\n    {\r\n        type: \"select\",\r\n        Question: \"What is your Zodic sign ?\",\r\n        Options: [\r\n            \"Aquarius\",\r\n            \"Pisces\",\r\n            \"Aries\",\r\n            \"Taurus\",\r\n            \"Gemini\",\r\n            \"Cancer\",\r\n            \"leo\",\r\n            \"Virgo\",\r\n            \"Libra\",\r\n            \"Scorpio\",\r\n            \"Sagittarius\",\r\n            \"Capricorn\"\r\n        ],\r\n        Answer: \"Cuttack\"\r\n    },\r\n    {\r\n        type: \"radio\",\r\n        Question: \"What is the capital of India ?\",\r\n        Options: [\r\n            \"Bombay\",\r\n            \"Delhi\",\r\n            \"Ahmedabad\",\r\n            \"Kolkata\"\r\n        ],\r\n        Answer: \"Cuttack\"\r\n    },\r\n    {\r\n        type: \"range\",\r\n        Question: \"How much you are interested in front-end ?\",\r\n        Options: [\r\n    \r\n        ],\r\n        Answer: \"Cuttack\"\r\n    },\r\n    {\r\n        type: \"radio\",\r\n        Question: \"Which one is your Favourite car ?\",\r\n        Options: [\r\n            \"Audi\",\r\n            \"Mercedes\",\r\n            \"Bugatti\",\r\n            \"Other\"\r\n        ],\r\n        Answer: \"Cuttack\"\r\n    }\r\n];\r\n\r\nexport default question_bank;","import React, { Component } from 'react'\r\nimport \"./kbc.css\"\r\nimport question_bank from \"./question_bank\"\r\n\r\nexport default class Questions extends Component {\r\n\r\n    Answers = [\r\n        {no: 1, answer: \"not answered\"},\r\n        {no: 2, answer: \"not answered\"},\r\n        {no: 3, answer: \"not answered\"},\r\n        {no: 4, answer: \"not answered\"},\r\n        {no: 5, answer: \"not answered\"},\r\n        {no: 6, answer: \"not answered\"},\r\n        {no: 7, answer: \"not answered\"},\r\n        {no: 8, answer: \"not answered\"},\r\n        {no: 9, answer: \"not answered\"},\r\n        {no: 10, answer: \"not answered\"}\r\n    ];\r\n\r\n    state = {\r\n        currentQuestion: 0,\r\n        submited: false\r\n    }\r\n\r\n    // options = [0,1,2,3].map((value) => {\r\n    //     return (<div className=\"col-6\" key={value}>\r\n    //                 <input type=\"radio\" name=\"kbc_option\" id={question_bank[this.state.currentQuestion].Options[value]} key={question_bank[this.state.currentQuestion].Options[value]} />\r\n    //                 <label htmlFor={question_bank[this.state.currentQuestion].Options[value]} key={value} className=\"font-weight-bold mx-1\">{question_bank[this.state.currentQuestion].Options[value]}</label>\r\n    //             </div>)\r\n    // });\r\n    \r\n\r\n    render() {\r\n\r\n    //    const options = [0,1,2,3].map((value) => {\r\n    //         return (<div className=\"col-6\" key={value}>\r\n    //                     <input type=\"radio\" name=\"kbc_option\" id={question_bank[this.state.currentQuestion].Options[value]} key={question_bank[this.state.currentQuestion].Options[value]} value={question_bank[this.state.currentQuestion].Options[value]} onChange={\r\n    //                         (e) => {\r\n    //                             console.log(this.state.answers);\r\n    //                         }\r\n    //                     } />\r\n    //                     <label htmlFor={question_bank[this.state.currentQuestion].Options[value]} key={value} className=\"font-weight-bold mx-1\">{question_bank[this.state.currentQuestion].Options[value]}</label>\r\n    //                 </div>)\r\n    //     }); \r\n\r\n    let options=\"\";\r\n\r\n        switch(question_bank[this.state.currentQuestion].type) {\r\n            case \"text\":\r\n                options = <div className=\"col-6\">\r\n                                <input type=\"text\" name=\"kbc_option\" onChange={(e) => this.Answers[this.state.currentQuestion].answer = e.target.value} />\r\n                            </div>\r\n                             break;\r\n\r\n            case \"radio\":\r\n                options = [0,1,2,3].map((value) => {\r\n                    return (<div className=\"col-6\" key={value}>\r\n                                <input type=\"radio\" name=\"kbc_option\" id={question_bank[this.state.currentQuestion].Options[value]} key={question_bank[this.state.currentQuestion].Options[value]} value={question_bank[this.state.currentQuestion].Options[value]} onChange={\r\n                                    (e) => {\r\n                                        if(e.target.checked) {\r\n                                            this.Answers[this.state.currentQuestion].answer = e.target.value;\r\n                                        }\r\n                                    }\r\n                                } />\r\n                                <label htmlFor={question_bank[this.state.currentQuestion].Options[value]} key={value} className=\"font-weight-bold mx-1\">{question_bank[this.state.currentQuestion].Options[value]}</label>\r\n                            </div>)\r\n                    }); \r\n                    break;\r\n\r\n            case \"range\":\r\n                options = <div className=\"col-6\">\r\n                                <input type=\"range\" min=\"1\" max=\"100\" step=\"1\" name=\"kbc_option\" id=\"kbc_option\" className=\"form-control\" onChange={(e) => {\r\n                                    this.Answers[this.state.currentQuestion].answer = e.target.value\r\n                                }} />\r\n                                <label htmlFor=\"kbc_option\">{this.Answers[this.state.currentQuestion].answer+ \"%\"}</label>\r\n                            </div>\r\n                             break;\r\n\r\n            case \"select\":\r\n                let selectbox_options = question_bank[this.state.currentQuestion].Options.map((value) => {\r\n                    return(\r\n                        <option key={value} value={value}>{value}</option>\r\n                    );\r\n                });\r\n                options = <div className=\"col-6\">\r\n                            <select className=\"form-control\" onChange={(e) => {\r\n                                this.Answers[this.state.currentQuestion].answer = e.target.value;\r\n                            }}>\r\n                                {selectbox_options}\r\n                            </select>\r\n                        </div>\r\n                        break;\r\n            \r\n            default:\r\n                options = <div className=\"col-6\">\r\n                                <input type=\"radio\" name=\"kbc_option\" />\r\n                            </div>\r\n                             break;\r\n        }\r\n\r\n        if(this.state.submited === false) {\r\n            return (\r\n                <React.Fragment>\r\n                    <div className=\"row justify-content-center my-4\">\r\n                        <div className=\"col-1 py-5\">\r\n                            <button className=\"btn btn-success my-5\" onClick={() => {\r\n                                if(this.state.currentQuestion > 0) {\r\n                                    this.setState({\r\n                                        currentQuestion: this.state.currentQuestion - 1          \r\n                                    });\r\n                                }\r\n                            }}>previous</button>\r\n                        </div>\r\n                        <div className=\"col-6 border border-dark my-2\">\r\n                            <h4>\r\n                                <span className=\"mx-1\">Q.{this.state.currentQuestion + 1}</span>\r\n                                {question_bank[this.state.currentQuestion].Question}\r\n                            </h4>\r\n                            <div className=\"row my-4\">\r\n                                {options}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-1 py-5\">\r\n                            <button className=\"btn btn-success my-5\" onClick={() => {\r\n                                if(this.state.currentQuestion < 9 ) {\r\n                                    this.setState({currentQuestion: this.state.currentQuestion + 1});\r\n                                }\r\n                            }}>Next</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-auto\">\r\n                            <button className=\"btn btn-primary\" onClick={() => {\r\n                                this.setState({submited: true});\r\n                                // console.log(\"Hello World\");\r\n                            }}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return(\r\n                <div className=\"mx-5 my-4\">\r\n                    {\r\n                        (() => {\r\n                           const showAnswers = this.Answers.map((value) => {\r\n                                return(\r\n                                   <h4 key={value.answer + Math.floor(Math.random() * 1000)} className={(value.answer === \"not answered\")? \"text-danger\": \"text-success\"}>\r\n                                        <span className=\"mx-2 text-dark font-weight-bold\">Q.{value.no}</span>{value.answer}\r\n                                   </h4> \r\n                                );\r\n                           });\r\n\r\n                        //    return showAnswers;\r\n                        return showAnswers\r\n                        })()\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Header from \"./header\"\r\nimport Footer from './footer'\r\nimport Quesitons from \"./questions\"\r\nimport \"./bootstrap.min.css\"\r\nimport \"./kbc.css\"\r\n\r\nexport default class KBC extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Quesitons />\r\n                <Footer />   \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport KBC from './KBC'\r\n\r\nReactDOM.render(<KBC />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}